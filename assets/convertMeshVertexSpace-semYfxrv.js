import{dm as p,B as m,a8 as i}from"./index-CaKGzNfV.js";import{p as n}from"./MeshVertexAttributes-BcgrCUVv.js";import{B as a}from"./vertexSpaceConversion-C2s5qYIw.js";import"./meshProperties-C4iW0Ukm.js";import"./spatialReferenceEllipsoidUtils-7gfyUPFt.js";import"./computeTranslationToOriginAndRotation-C5ITxglo.js";import"./vec3-V_t_Rpa0.js";import"./BufferView-BnR-WMub.js";import"./vec4-DHJdSNO7.js";async function b(t,e,r){await Promise.resolve(),p(r);const o=a(t,e,{useEllipsoid:r==null?void 0:r.useEllipsoid});if(!o)throw new m("meshUtils:convertVertexSpace()","Failed to convert to provided vertex space due to projection errors");const s=t.cloneAndModifyVertexAttributes(new n({...o,uv:i(t.vertexAttributes.uv),color:i(t.vertexAttributes.color)}),e);return s.transform=null,s}export{b as convertMeshVertexSpace};
