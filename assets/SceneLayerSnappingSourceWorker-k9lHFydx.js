import{dX as f,cU as m,cH as g,ha as E,hb as _,l as w,n as v,cz as h,bB as y,hc as b,cB as u}from"./index-eSY5-lt-.js";import{v as L,b as V,l as P}from"./lineSegment-EzA48HN-.js";import{W as C}from"./Octree-zeHYSLTZ.js";import{m as S}from"./edgeProcessing-UOhTeKs_.js";import"./deduplicate-QfgWUagS.js";import"./Indices-bOD3sMcK.js";import"./InterleavedLayout-anHqp-yr.js";import"./BufferView-KywjVo63.js";import"./types-GBdbcYRa.js";import"./VertexAttribute-h46lBfqy.js";import"./glUtil-eBq9W4Bb.js";import"./enums-8pc8f5Ge.js";import"./VertexElementDescriptor-0hGjloLE.js";const j=1e3;function I(t,e,o){const n=E(),i=_(n);return f(i,i,t,.5),f(i,i,e,.5),n[3]=m(i,t),g(i,i,o),n}let l=class{constructor(){this._idToComponent=new Map,this._components=new C(t=>t.bounds),this._edges=new C(t=>t.bounds),this._tmpLineSegment=L(),this._tmpP1=h(),this._tmpP2=h(),this._tmpP3=h(),this.remoteClient=null}async fetchCandidates(t,e){await Promise.resolve(),y(e),await this._ensureEdgeLocations(t,e);const o=[];return this._edges.forEachNeighbor(n=>(this._addCandidates(t,n,o),o.length<j),t.bounds),{result:{candidates:o}}}async _ensureEdgeLocations(t,e){const o=[];if(this._components.forEachNeighbor(s=>{if(s.info==null){const{id:c,uid:d}=s;o.push({id:c,uid:d})}return!0},t.bounds),!o.length)return;const n={components:o},i=await this.remoteClient.invoke("fetchAllEdgeLocations",n,e??{});for(const s of i.components)this._setFetchEdgeLocations(s)}async add(t){const e=new p(t.id,t.bounds);return this._idToComponent.set(e.id,e),this._components.add([e]),{result:{}}}async remove(t){const e=this._idToComponent.get(t.id);if(e){const o=[];this._edges.forEachNeighbor(n=>(n.component===e&&o.push(n),!0),e.bounds),this._edges.remove(o),this._components.remove([e]),this._idToComponent.delete(e.id)}return{result:{}}}_setFetchEdgeLocations(t){const e=this._idToComponent.get(t.id);if(e==null||t.uid!==e.uid)return;const o=S.createView(t.locations),n=new Array(o.count),i=h(),s=h();for(let r=0;r<o.count;r++){o.position0.getVec(r,i),o.position1.getVec(r,s);const a=I(i,s,t.origin),x=new T(e,r,a);n[r]=x}this._edges.add(n);const{objectIds:c,origin:d}=t;e.info={locations:o,objectIds:c,origin:d}}_addCandidates(t,e,o){const{info:n}=e.component,{origin:i,objectIds:s}=n,c=n.locations,d=c.position0.getVec(e.index,this._tmpP1),r=c.position1.getVec(e.index,this._tmpP2);g(d,d,i),g(r,r,i);const a=s[c.componentIndex.get(e.index)];this._addEdgeCandidate(t,a,d,r,o),this._addVertexCandidate(t,a,d,o),this._addVertexCandidate(t,a,r,o)}_addEdgeCandidate(t,e,o,n,i){if(!t.returnEdge)return;const s=_(t.bounds),c=V(o,n,this._tmpLineSegment),d=P(c,s,this._tmpP3);b(t.bounds,d)&&i.push({type:"edge",objectId:e,target:u(d),distance:m(s,d),start:u(o),end:u(n)})}_addVertexCandidate(t,e,o,n){if(!t.returnVertex)return;const i=_(t.bounds);b(t.bounds,o)&&n.push({type:"vertex",objectId:e,target:u(o),distance:m(i,o)})}};l=w([v("esri.views.interactive.snapping.featureSources.sceneLayerSource.SceneLayerSnappingSourceWorker")],l);const D=l;class p{constructor(e,o){this.id=e,this.bounds=o,this.info=null,this.uid=++p.uid}}p.uid=0;class T{constructor(e,o,n){this.component=e,this.index=o,this.bounds=n}}export{D as default};
