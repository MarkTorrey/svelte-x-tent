import{i as w,h as y,y as I,r as V,c as v,e as H,f as T,g as l,j as c,k as q,l as m,m as g,n as U}from"./index-eSY5-lt-.js";import"./EffectView-eHJp2ynv.js";import"./Container-AO0ma2pG.js";import"./BufferPool-U4f6W5v-.js";import"./color-Y1HD3ytM.js";import"./WGLContainer-NUKBXko_.js";import"./vec4f32-NvfHy9q7.js";import"./enums-8pc8f5Ge.js";import"./Texture-4vQG0qLG.js";import"./ProgramTemplate-mAY_399P.js";import"./definitions-otzk_d_r.js";import"./GeometryUtils-PBUEihia.js";import"./FramebufferObject-FWwprw92.js";import"./VertexArrayObject-whl5pCEr.js";import"./number-sTjsTbdA.js";import"./StyleDefinition-ohiNeWtS.js";import"./enums-W_WZ2jKy.js";import"./MagnifierPrograms-EPEetlg2.js";import"./OrderIndependentTransparency-zg-ZjAWW.js";import"./floatRGBA-9E5qKLsz.js";import"./testSVGPremultipliedAlpha-GARkqVUs.js";import{r as S}from"./GraphicsView2D-i7e92lLy.js";import"./AttributeStoreView-v_U2sesH.js";import"./earcut-wP_5WnqY.js";import"./featureConversionUtils-91rcTs0M.js";import"./vec3f32-cbLeGFQ-.js";import{r as b,o as f,n as d}from"./imageUtils-owCsLWb-.js";import{m as C}from"./LayerView2D-fHeQM5c3.js";import{a as Q}from"./HighlightGraphicContainer-_x6x_dgi.js";import{u as k}from"./LayerView-CRo_qb-x.js";import{a as P}from"./RefreshableLayerView-FnCvUyzs.js";import{S as F,G}from"./MapServiceLayerViewHelper-1ouFyiRg.js";import"./enums--FbEXJ87.js";import"./VertexElementDescriptor-0hGjloLE.js";import"./heatmapUtils-QdzYLNxE.js";import"./config-z2KFXUcx.js";import"./OptimizedGeometry-CbNXANBG.js";import"./alignmentUtils-XT3TYmYW.js";import"./cimAnalyzer-DsuWkQlK.js";import"./fontUtils-GE0ho--n.js";import"./BidiEngine-8z8MVveq.js";import"./labelPoint-mThgM4t0.js";import"./GeometryUtils-CEMOhUyj.js";import"./utils-jQLeeGOF.js";import"./Rect-pT1ASav_.js";import"./callExpressionWithFeature-rytrJuuz.js";import"./quantizationUtils-DTwa03mn.js";import"./Rasterizer-JVG-pIoh.js";import"./rasterizingUtils-vy6gAIzi.js";import"./pbf-L_JjT3GM.js";import"./imageutils-4dcLUfnP.js";import"./Matcher-Mv_XwJSb.js";import"./visualVariablesUtils-lT9viKWj.js";import"./tileUtils-pcBJnprf.js";import"./TurboLine-lq2gJIeK.js";import"./defaultsJSON-x-mq3Ho7.js";import"./LRUCache-mFQSPLKh.js";import"./ExpandedCIM-bbZk55Wb.js";import"./CircularArray-1_thnT0U.js";import"./throttle-SZpAiZ7F.js";import"./ComputedAttributeStorage-JNIiBSw3.js";import"./OptimizedFeature-5RGb7-P9.js";import"./FieldsIndex-_W1Us-oq.js";import"./UnknownTimeZone-iVS1S_Kf.js";import"./TimeOnly-WOAkj6tI.js";import"./diffUtils-x5OXhJZZ.js";import"./basicInterfaces-IwaMq8O_.js";import"./normalizeUtilsSync-vawo822E.js";import"./projectionSupport-7ZBNFFZX.js";import"./json-v6EOeNTY.js";import"./defaults--brCOrwa.js";import"./TiledDisplayObject-yP0_0rbx.js";import"./labelingInfo-Ik6k9hmR.js";import"./LabelClass-Ii0xtB2a.js";import"./labelUtils-x_C8o7Up.js";import"./jsonUtils-1IxKPsH1.js";import"./clusterUtils-kJgVNgUU.js";import"./MD5-uECS9GB-.js";import"./SizeVariable-221gAT5i.js";import"./colorRamps-rojoPCoV.js";import"./LegendOptions-x-5oaDqO.js";import"./util-7E7JUKUD.js";import"./OptimizedFeatureSet-smVI1ez9.js";import"./BitmapTileContainer-zWhyqFAw.js";import"./Bitmap-Qg1VS7OT.js";import"./TileContainer-Dws-iayU.js";import"./BaseGraphicContainer-i9-NOgp7.js";import"./FeatureContainer-x5rBbMr_.js";import"./sublayerUtils-TUwx3ufc.js";import"./popupUtils-CDV9bUjJ.js";const L=[0,0];let p=class extends P(b(C(k))){constructor(){super(...arguments),this._fetchQueue=null,this._highlightGraphics=new w,this._highlightView=null,this._popupHighlightHelper=null,this._tileStrategy=null,this.layer=null}get resampling(){return!("resampling"in this.layer)||this.layer.resampling!==!1}get tilemapCache(){return"tilemapCache"in this.layer?this.layer.tilemapCache:null}update(t){var i;this._fetchQueue.pause(),this._fetchQueue.state=t.state,this._tileStrategy.update(t),this._fetchQueue.resume(),(i=this._highlightView)==null||i.processUpdate(t)}attach(){const t="tileServers"in this.layer?this.layer.tileServers:null,i=this.tilemapCache;if(this._tileInfoView=new y(this.layer.tileInfo,this.layer.fullExtent,i==null?void 0:i.effectiveMinLOD,i==null?void 0:i.effectiveMaxLOD),this._fetchQueue=new I({tileInfoView:this._tileInfoView,concurrency:t&&10*t.length||10,process:(e,r)=>this.fetchTile(e,r)}),this._tileStrategy=new V({cachePolicy:"keep",resampling:this.resampling,acquireTile:e=>this.acquireTile(e),releaseTile:e=>this.releaseTile(e),tileInfoView:this._tileInfoView}),F(this,this.layer)){const e=this._highlightView=new S({view:this.view,graphics:this._highlightGraphics,requestUpdateCallback:()=>this.requestUpdate(),container:new Q(this.view.featuresTilingScheme),defaultPointSymbolEnabled:!1});this.container.addChild(this._highlightView.container),this._popupHighlightHelper=new G({createFetchPopupFeaturesQueryGeometry:(r,h)=>v(r,h,this.view),highlightGraphics:this._highlightGraphics,highlightGraphicUpdated:(r,h)=>{e.graphicUpdateHandler({graphic:r,property:h})},layerView:this,updatingHandles:this._updatingHandles})}this.requestUpdate(),this.addAttachHandles(this._updatingHandles.add(()=>this.resampling,()=>{this.doRefresh()})),super.attach()}detach(){var t,i;super.detach(),this._tileStrategy.destroy(),this._fetchQueue.clear(),this.container.removeAllChildren(),(t=this._popupHighlightHelper)==null||t.destroy(),(i=this._highlightView)==null||i.destroy(),this._fetchQueue=this._tileStrategy=this._tileInfoView=this._popupHighlightHelper=null}async fetchPopupFeatures(t,i){return this._popupHighlightHelper?this._popupHighlightHelper.fetchPopupFeatures(t,i):[]}highlight(t){return this._popupHighlightHelper?this._popupHighlightHelper.highlight(t):H()}moveStart(){this.requestUpdate()}viewChange(){this.requestUpdate()}moveEnd(){this.requestUpdate()}supportsSpatialReference(t){var i;return T((i=this.layer.tileInfo)==null?void 0:i.spatialReference,t)}async doRefresh(){if(this.attached){if(this.suspended)return this._tileStrategy.clear(),void this.requestUpdate();this._fetchQueue.reset(),this._tileStrategy.refresh(t=>this._updatingHandles.addPromise(this._enqueueTileFetch(t)))}}acquireTile(t){const i=this._bitmapView.createTile(t),e=i.bitmap;return[e.x,e.y]=this._tileInfoView.getTileCoords(L,i.key),e.resolution=this._tileInfoView.getTileResolution(i.key),[e.width,e.height]=this._tileInfoView.tileInfo.size,this._updatingHandles.addPromise(this._enqueueTileFetch(i)),this._bitmapView.addChild(i),this.requestUpdate(),i}releaseTile(t){this._fetchQueue.abort(t.key.id),this._bitmapView.removeChild(t),t.once("detach",()=>t.destroy()),this.requestUpdate()}async fetchTile(t,i={}){const e=this.tilemapCache,{signal:r,resamplingLevel:h=0}=i;if(!e)try{return await this._fetchImage(t,r)}catch(s){if(!l(s)&&!this.resampling)return f(this._tileInfoView.tileInfo.size);if(h<3){const n=this._tileInfoView.getTileParentId(t.id);if(n){const u=new c(n),_=await this.fetchTile(u,{...i,resamplingLevel:h+1});return d(this._tileInfoView,_,u,t)}}throw s}const a=new c(0,0,0,0);let o;try{if(await e.fetchAvailabilityUpsample(t.level,t.row,t.col,a,{signal:r}),a.level!==t.level&&!this.resampling)return f(this._tileInfoView.tileInfo.size);o=await this._fetchImage(a,r)}catch(s){if(l(s))throw s;o=await this._fetchImage(t,r)}return this.resampling?d(this._tileInfoView,o,a,t):o}async _enqueueTileFetch(t){if(!this._fetchQueue.has(t.key.id)){try{const i=await this._fetchQueue.push(t.key);t.bitmap.source=i,t.bitmap.width=this._tileInfoView.tileInfo.size[0],t.bitmap.height=this._tileInfoView.tileInfo.size[1],t.once("attach",()=>this.requestUpdate())}catch(i){l(i)||q.getLogger(this).error(i)}this.requestUpdate()}}async _fetchImage(t,i){return this.layer.fetchImageBitmapTile(t.level,t.row,t.col,{signal:i})}};m([g()],p.prototype,"resampling",null),m([g()],p.prototype,"tilemapCache",null),p=m([U("esri.views.2d.layers.TileLayerView2D")],p);const wi=p;export{wi as default};
