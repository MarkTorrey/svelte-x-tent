import{i as k}from"./CIMResourceManager-EPX0o-_I.js";import{e as _,a as E,K as F}from"./CIMSymbolHelper-CY__-kW6.js";import{y as G}from"./OverrideHelper-ClkM4CZ1.js";import{V as P}from"./utils-BE8joJvK.js";import"./fontUtils-DnX1oK2e.js";import"./index-Cek7aMWl.js";import"./imageUtils-DfzNVhIJ.js";import"./BidiEngine-BwB1Df7c.js";import"./OptimizedGeometry-vU5jWBvU.js";import"./GeometryUtils-B2Qq2Dwi.js";import"./enums-BRXbslMp.js";import"./definitions-Y_v3njP4.js";import"./Rect-CUzevAry.js";import"./BoundingBox-DD1zHGe8.js";import"./defaults-fOuW8gwA.js";import"./defaultsJSON-GKolV7NZ.js";import"./colorUtils-BlCLzs4t.js";import"./quantizationUtils-DeBnMDmu.js";const q=96/72;class ee{constructor(g){this._spatialReference=g,this._imageDataCanvas=null,this._cimResourceManager=new k}get _canvas(){return this._imageDataCanvas||(this._imageDataCanvas=document.createElement("canvas")),this._imageDataCanvas}get resourceManager(){return this._cimResourceManager}async rasterizeCIMSymbolAsync(g,u,w,f,s,i,o,n,M){if(!g)return null;const{data:c}=g;if(!c||c.type!=="CIMSymbolReference"||!c.symbol)return null;const{symbol:C}=c;i||(i=P(C));const r=await G.resolveSymbolOverrides(c,u,this._spatialReference,s,i,o,n),m=this._cimResourceManager,d=[];_.fetchResources(r,m,d),_.fetchFonts(r,m,d),d.length>0&&await Promise.all(d);const{width:t,height:a}=w,R=D(i,t,a,f),e=_.getEnvelope(r,R,m);if(!e)return null;let h=1,I=0,v=0;switch(C.type){case"CIMPointSymbol":case"CIMTextSymbol":{let l=1;e.width>t&&(l=t/e.width);let p=1;e.height>a&&(p=a/e.height),f==="preview"&&(e.width<t&&(l=t/e.width),e.height<a&&(p=a/e.height)),h=Math.min(l,p),I=e.x+e.width/2,v=e.y+e.height/2}break;case"CIMLineSymbol":{(M||e.height>a)&&(h=a/e.height),v=e.y+e.height/2;const l=e.x*h+t/2,p=(e.x+e.width)*h+t/2,{paths:b}=R;b[0][0][0]-=l/h,b[0][2][0]-=(p-t)/h}break;case"CIMPolygonSymbol":{I=e.x+e.width/2,v=e.y+e.height/2;const l=e.x*h+t/2,p=(e.x+e.width)*h+t/2,b=e.y*h+a/2,S=(e.y+e.height)*h+a/2,{rings:y}=R;l<0&&(y[0][0][0]-=l,y[0][3][0]-=l,y[0][4][0]-=l),b<0&&(y[0][0][1]+=b,y[0][1][1]+=b,y[0][4][1]+=b),p>t&&(y[0][1][0]-=p-t,y[0][2][0]-=p-t),S>a&&(y[0][2][1]+=S-a,y[0][3][1]+=S-a)}}const z={type:"cim",data:{type:"CIMSymbolReference",symbol:r}};return this.rasterize(z,t,a,I,v,h,i,1,R)}rasterize(g,u,w,f,s,i,o,n=0,M=null){const{data:c}=g;if(!c||c.type!=="CIMSymbolReference"||!c.symbol)return null;const{symbol:C}=c,r=this._canvas,m=(window.devicePixelRatio||1)*q;r.width=u*m,r.height=w*m,o||(o=P(C)),M||(M=D(o,u,w,"legend")),r.width+=2*n,r.height+=2*n;const d=r.getContext("2d",{willReadFrequently:!0}),t=F.createIdentity();return t.translate(-f,-s),t.scale(i*m,-i*m),t.translate(u*m/2+n,w*m/2+n),d.clearRect(0,0,r.width,r.height),new E(d,this._cimResourceManager,t,!0).drawSymbol(C,M),d.getImageData(0,0,r.width,r.height)}}function D(x,g,u,w){const s=-g/2+1,i=g/2-1,o=u/2-1,n=-u/2+1;switch(x){case"esriGeometryPoint":return{x:0,y:0};case"esriGeometryPolyline":return{paths:[[[s,0],[0,0],[i,0]]]};default:return w==="legend"?{rings:[[[s,o],[i,0],[i,n],[s,n],[s,o]]]}:{rings:[[[s,o],[i,o],[i,n],[s,n],[s,o]]]}}}export{ee as CIMSymbolRasterizer};
