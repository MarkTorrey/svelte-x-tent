import{n as l,P as n,V as g,o as w,k as f,m as d}from"./index-rwr9l75y.js";import{t as u,p as h}from"./jsonUtils-E5tmSupD.js";import{d as V}from"./FeatureSet-2nxwJf8L.js";import{m as b,u as S}from"./LayerView-SN8Ya_ml.js";import{i as _}from"./GraphicContainer-GliTMIkB.js";import{r as T}from"./GraphicsView2D-L3UlZANi.js";import"./UniqueValueRenderer-vpcJI4tu.js";import"./LegendOptions-E7OIex9R.js";import"./diffUtils-g7Fohb1Y.js";import"./SizeVariable-Ekg0XaNX.js";import"./colorRamps-awdEZ3u_.js";import"./lengthUtils-fNXXQLZy.js";import"./ColorStop-hqYqJZzQ.js";import"./jsonUtils-1tkaaT9f.js";import"./styleUtils-u-o4YNNJ.js";import"./DictionaryLoader-uaxQVTqz.js";import"./LRUCache-9CocD9iD.js";import"./Version-VeHGbusC.js";import"./FieldsIndex-PWGCOsyk.js";import"./UnknownTimeZone-jfi9eEf7.js";import"./heatmapUtils-y_chVdwW.js";import"./Field-BSvFaGGy.js";import"./fieldType-3gjYBYno.js";import"./Container-m-X2DGFy.js";import"./parser-WHTFD6Ot.js";import"./definitions--BerIEB0.js";import"./enums-8pc8f5Ge.js";import"./Texture-IITjQftW.js";import"./color-MSA9vB2T.js";import"./enums--FbEXJ87.js";import"./VertexElementDescriptor-0hGjloLE.js";import"./BaseGraphicContainer-nkQkRClz.js";import"./FeatureContainer-sCP9pctf.js";import"./AttributeStoreView-2GRDdbO8.js";import"./TiledDisplayObject-NTAr5tsC.js";import"./labelingInfo-l9wgedMn.js";import"./LabelClass-V8j5wui3.js";import"./labelUtils-JUCMTUQJ.js";import"./defaultsJSON-HVtDPFXZ.js";import"./WGLContainer-RWXnfBYU.js";import"./FramebufferObject-xhcDpZRj.js";import"./ProgramTemplate-drETQBUn.js";import"./GeometryUtils-pN0lJOJH.js";import"./StyleDefinition-ohiNeWtS.js";import"./config-z2KFXUcx.js";import"./earcut-6aBD8Ssv.js";import"./featureConversionUtils-FNM6dcN0.js";import"./OptimizedGeometry-1RFAES06.js";import"./OptimizedFeatureSet-smVI1ez9.js";import"./visualVariablesUtils-ftjXEZ2Y.js";import"./ExpandedCIM-r039T5K9.js";import"./BidiEngine-8z8MVveq.js";import"./GeometryUtils-CEMOhUyj.js";import"./utils-8dHEt1x_.js";import"./Rect-pT1ASav_.js";import"./quantizationUtils-Us5VtfAD.js";import"./floatRGBA-Y0kA9R7X.js";import"./clusterUtils-CpC7FOKC.js";import"./MD5-uECS9GB-.js";import"./util-PmijqwOP.js";import"./TileContainer-941YHDRa.js";import"./vec3f32-6rWBPTzX.js";import"./normalizeUtilsSync-UY7exMMQ.js";import"./projectionSupport-hu9_r6iQ.js";import"./json-v6EOeNTY.js";import"./Matcher-5VzK9-Dg.js";import"./tileUtils-pcBJnprf.js";import"./TurboLine-w-LQISZ9.js";import"./ComputedAttributeStorage-puCMOryp.js";import"./TimeOnly-ZwWj2Vlb.js";let y=class extends b(S){constructor(){super(...arguments),this._graphicsViewMap={},this._popupTemplates=new Map,this.graphicsViews=[]}async hitTest(i,o){if(!this.graphicsViews.length)return null;const e=this.layer;return this.graphicsViews.reverse().flatMap(r=>{const t=this._popupTemplates.get(r),s=r.hitTest(i);for(const p of s)p.layer=e,p.sourceLayer=e,p.popupTemplate=t;return s}).map(r=>({type:"graphic",graphic:r,layer:e,mapPoint:i}))}update(i){if(this.graphicsViews)for(const o of this.graphicsViews)o.processUpdate(i)}attach(){this.addAttachHandles([l(()=>{var i;return(i=this.layer)==null?void 0:i.featureCollections},i=>{this._clear();for(const{popupInfo:o,featureSet:e,layerDefinition:r}of i){const t=V.fromJSON(e),s=new g(t.features),p=r.drawingInfo,c=o?w.fromJSON(o):null,m=u(p.renderer),a=new T({requestUpdateCallback:()=>this.requestUpdate(),view:this.view,graphics:s,renderer:m,container:new _(this.view.featuresTilingScheme)});this._graphicsViewMap[t.geometryType]=a,this._popupTemplates.set(a,c),t.geometryType!=="polygon"||this.layer.polygonSymbol?t.geometryType!=="polyline"||this.layer.lineSymbol?t.geometryType!=="point"||this.layer.pointSymbol||(this.layer.pointSymbol=m.symbol):this.layer.lineSymbol=m.symbol:this.layer.polygonSymbol=m.symbol,this.graphicsViews.push(a),this.container.addChild(a.container)}},n),l(()=>{var i;return(i=this.layer)==null?void 0:i.polygonSymbol},i=>{this._graphicsViewMap.polygon.renderer=new h({symbol:i})},n),l(()=>{var i;return(i=this.layer)==null?void 0:i.lineSymbol},i=>{this._graphicsViewMap.polyline.renderer=new h({symbol:i})},n),l(()=>{var i;return(i=this.layer)==null?void 0:i.pointSymbol},i=>{this._graphicsViewMap.point.renderer=new h({symbol:i})},n)])}detach(){this._clear()}moveStart(){}moveEnd(){}viewChange(){for(const i of this.graphicsViews)i.viewChange()}_clear(){this.container.removeAllChildren();for(const i of this.graphicsViews)i.destroy();this._graphicsViewMap={},this._popupTemplates.clear(),this.graphicsViews.length=0}};y=f([d("esri.views.2d.layers.GeoRSSLayerView2D")],y);const Ei=y;export{Ei as default};
