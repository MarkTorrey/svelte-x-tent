import{ca as w,cb as v}from"./index-Cek7aMWl.js";import{e as g}from"./CIMSymbolHelper-CY__-kW6.js";import{CIMSymbolRasterizer as j}from"./CIMSymbolRasterizer-CZAf-fFC.js";import{y as G}from"./OverrideHelper-ClkM4CZ1.js";import{V as O}from"./utils-BE8joJvK.js";import{t as b,l as R}from"./symbolUtils-gs7zz1py.js";import"./BidiEngine-BwB1Df7c.js";import"./fontUtils-DnX1oK2e.js";import"./OptimizedGeometry-vU5jWBvU.js";import"./GeometryUtils-B2Qq2Dwi.js";import"./enums-BRXbslMp.js";import"./definitions-Y_v3njP4.js";import"./Rect-CUzevAry.js";import"./BoundingBox-DD1zHGe8.js";import"./defaults-fOuW8gwA.js";import"./defaultsJSON-GKolV7NZ.js";import"./CIMResourceManager-EPX0o-_I.js";import"./imageUtils-DfzNVhIJ.js";import"./colorUtils-BlCLzs4t.js";import"./quantizationUtils-DeBnMDmu.js";import"./ColorStop-CqMXhorb.js";import"./utils-Cp7l-Qiq.js";import"./cimSymbolUtils-CiZiLm4M.js";import"./LRUCache-pAqnhOsq.js";import"./utils-CGzR1Xtt.js";import"./jsonUtils-DGzEHX8a.js";import"./UniqueValueRenderer-DoQjGRE5.js";import"./colorRamps-4yJNyWKx.js";import"./sizeVariableUtils-Cmcuvw-4.js";import"./visualVariableUtils-Cdb7Kq7r.js";import"./jsonUtils-C2l4B_cE.js";import"./styleUtils-Dv2EsbEO.js";import"./Version-DJsGRXWf.js";import"./FieldsIndex-Bjg3eA_S.js";import"./UnknownTimeZone-Cjv2gi-C.js";import"./heatmapUtils-NTzr8GZp.js";import"./webStyleSymbolUtils-NOGravR0.js";import"./devEnvironmentUtils-D6qIi8Ky.js";const u=new j(null),c=w(b.size),S=w(b.maxSize),C=w(b.lineWidth),V=1;async function $(r,e,a){const i=e==null?void 0:e.size;let t=i!=null&&typeof i=="object"&&"width"in i?i.width:i,l=i!=null&&typeof i=="object"&&"height"in i?i.height:i;if(t==null||l==null)if(a==="esriGeometryPolygon")t=c,l=c;else{const o=await q(r,e,a);o&&(t=o.width,l=o.height),a==="esriGeometryPolyline"&&(t=C),t=t!=null&&isFinite(t)?Math.min(t,S):c,l=l!=null&&isFinite(l)?Math.max(Math.min(l,S),V):c}return e.style==="legend"&&a==="esriGeometryPolyline"&&(t=C),{width:t,height:l}}async function q(r,e,a){const{feature:i,fieldMap:t,viewParams:l}=e.cimOptions||e,o=await G.resolveSymbolOverrides(r.data,i,null,t,a,null,l);if(!o)return null;(r=r.clone()).data={type:"CIMSymbolReference",symbol:o},r.data.primitiveOverrides=void 0;const n=[];return g.fetchResources(o,u.resourceManager,n),g.fetchFonts(o,u.resourceManager,n),n.length>0&&await Promise.all(n),g.getEnvelope(o,null,u.resourceManager)}async function ve(r,e={}){var M;const{node:a,opacity:i,symbolConfig:t}=e,l=t!=null&&typeof t=="object"&&"isSquareFill"in t&&t.isSquareFill,o=e.cimOptions||e,n=o.geometryType||O((M=r==null?void 0:r.data)==null?void 0:M.symbol),f=await $(r,e,n),{feature:P,fieldMap:I}=o,L=l||n!=="esriGeometryPolygon"?"preview":"legend",y=await u.rasterizeCIMSymbolAsync(r,P,f,L,I,n,null,o.viewParams,o.allowScalingUp);if(!y)return null;const{width:x,height:z}=y,p=document.createElement("canvas");p.width=x,p.height=z,p.getContext("2d").putImageData(y,0,0);const h=v(f.width),d=v(f.height),m=new Image(h,d);m.src=p.toDataURL(),m.ariaLabel=e.ariaLabel??null,m.alt=e.ariaLabel??"",i!=null&&(m.style.opacity=`${i}`);let s=m;if(e.effectView!=null){const F={shape:{type:"image",x:0,y:0,width:h,height:d,src:m.src},fill:null,stroke:null,offset:[0,0]};s=R([[F]],[h,d],{effectView:e.effectView,ariaLabel:e.ariaLabel})}return a&&s&&a.appendChild(s),s}export{ve as previewCIMSymbol};
