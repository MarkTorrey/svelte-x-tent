import{l as t,m as r,n as I,aN as F,fb as P,fc as E,bI as O,bm as $,g7 as k,s as d,aZ as A,hn as f,k as D,_ as v,eR as h,fY as N,bp as C,O as U,br as L,ho as V,hv as G,b3 as J,bk as g,q as M,bq as b,ah as q,ff as z}from"./index-eSY5-lt-.js";import"./UniqueValueRenderer-hljh8Sos.js";import{o as W,m as Y,u as Z}from"./jsonUtils-M3inctU9.js";import{m as Q}from"./MultiOriginJSONSupport-vWhNPmo6.js";import{l as B}from"./ArcGISService-ZNLoHKjp.js";import{o as H}from"./CustomParametersMixin-2_75FyjW.js";import{p as K}from"./FeatureEffectLayer-O4uCk7qT.js";import{c as X}from"./FeatureReductionLayer-3noB1jhj.js";import{u as ee}from"./OperationalLayer-3ukEE_2z.js";import{j as te}from"./PortalLayer-rHgWFtbi.js";import{f as ie}from"./RefreshableLayer-7Vl73DRX.js";import{a as re}from"./TemporalLayer-VuhNqDWS.js";import{m as oe,c as se,S as ne,T as ae,y as pe,p as le,d as de}from"./commonProperties-Z7yNesJQ.js";import{D as me}from"./featureLayerUtils-C42jjnpg.js";import{s as ce}from"./fieldProperties-54Gh-jYe.js";import{C as ue}from"./LabelClass-Ii0xtB2a.js";import{i as he}from"./labelingInfo-Ik6k9hmR.js";import{t as ye}from"./styleUtils-KC8yNoSs.js";import{p as fe}from"./popupUtils-7Uqan4_S.js";import{A as c}from"./interfaces-JKqm7GXy.js";import"./LegendOptions-x-5oaDqO.js";import"./diffUtils-x5OXhJZZ.js";import"./SizeVariable-221gAT5i.js";import"./colorRamps-rojoPCoV.js";import"./ColorStop-y1faJUUg.js";import"./jsonUtils-1IxKPsH1.js";import"./styleUtils-BMYfqyTs.js";import"./DictionaryLoader-W3_-N3pK.js";import"./LRUCache-mFQSPLKh.js";import"./Version-DuGO31mq.js";import"./FieldsIndex-_W1Us-oq.js";import"./UnknownTimeZone-iVS1S_Kf.js";import"./heatmapUtils-QdzYLNxE.js";import"./FeatureEffect-PYWUFKjR.js";import"./clusterUtils-kJgVNgUU.js";import"./MD5-uECS9GB-.js";import"./FeatureReductionSelection-fon3mH9t.js";import"./portalItemUtils-svYaQgLA.js";import"./AttachmentQuery-R-ww4TCj.js";import"./RelationshipQuery-ywbSZt88.js";import"./labelUtils-x_C8o7Up.js";import"./defaults--brCOrwa.js";import"./defaultsJSON-x-mq3Ho7.js";var y;let l=y=class extends F{constructor(){super(...arguments),this.age=null,this.ageReceived=null,this.displayCount=null,this.maxObservations=1}clone(){return new y({age:this.age,ageReceived:this.ageReceived,displayCount:this.displayCount,maxObservations:this.maxObservations})}};t([r({type:Number,json:{write:!0}})],l.prototype,"age",void 0),t([r({type:Number,json:{write:!0}})],l.prototype,"ageReceived",void 0),t([r({type:Number,json:{write:!0}})],l.prototype,"displayCount",void 0),t([r({type:Number,json:{write:!0}})],l.prototype,"maxObservations",void 0),l=y=t([I("esri.layers.support.PurgeOptions")],l);const x=l,w=ce();function S(e,o){return new d("layer:unsupported",`Layer (${e.title}, ${e.id}) of type '${e.declaredClass}' ${o}`,{layer:e})}let i=class extends X(K(P(re(E(ie(B(ee(te(Q(H(O(z)))))))))))){constructor(...e){super(...e),this.copyright=null,this.definitionExpression=null,this.displayField=null,this.elevationInfo=null,this.fields=null,this.fieldsIndex=null,this.geometryDefinition=null,this.geometryType=null,this.labelsVisible=!0,this.labelingInfo=null,this.legendEnabled=!0,this.maxReconnectionAttempts=0,this.maxReconnectionInterval=20,this.maxScale=0,this.minScale=0,this.objectIdField=null,this.operationalLayerType="ArcGISStreamLayer",this.outFields=["*"],this.popupEnabled=!0,this.popupTemplate=null,this.purgeOptions=new x,this.refreshInterval=0,this.screenSizePerspectiveEnabled=!0,this.sourceJSON=null,this.spatialReference=$.WGS84,this.type="stream",this.url=null,this.updateInterval=300,this.useViewTime=!0,this.webSocketUrl=null,this._debouncedSaveOperations=k(async(o,s,a)=>{const{save:n,saveAs:p}=await v(()=>import("./streamLayerUtils-6MV66K2c.js"),__vite__mapDeps([0,1,2,3,4,5,6,7,8]),import.meta.url);switch(o){case c.SAVE:return n(this,s);case c.SAVE_AS:return p(this,a,s)}})}normalizeCtorArgs(e,o){return typeof e=="string"?{url:e,...o}:e}load(e){if(!("WebSocket"in globalThis))return this.addResolvingPromise(Promise.reject(new d("stream-layer:websocket-unsupported","WebSocket is not supported in this browser. StreamLayer will not have real-time connection with the stream service."))),Promise.resolve(this);const o=e!=null?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Stream Service","Feed"]},e).catch(A).then(()=>this._fetchService(o))),Promise.resolve(this)}get defaultPopupTemplate(){return this.createPopupTemplate()}set featureReduction(e){const o=this._normalizeFeatureReduction(e);this._set("featureReduction",o)}set renderer(e){f(e,this.fieldsIndex),this._set("renderer",e)}readRenderer(e,o,s){var n;o=o.layerDefinition||o;const a=(n=o.drawingInfo)==null?void 0:n.renderer;if(a){const p=W(a,o,s)||void 0;return p||D.getLogger(this).error("Failed to create renderer",{rendererDefinition:o.drawingInfo.renderer,layer:this,context:s}),p}return me(o,s)}async connect(e){const[{createConnection:o}]=await Promise.all([v(()=>import("./createConnection-1fSEstbR.js"),__vite__mapDeps([9,2,3,10,11,12,13,14,15,16]),import.meta.url),this.load()]),s=this.geometryType?h.toJSON(this.geometryType):null,{customParameters:a=null,definitionExpression:n=null,geometryDefinition:p=null,maxReconnectionAttempts:R=0,maxReconnectionInterval:j=20,spatialReference:T=this.spatialReference}=e||this.createConnectionParameters(),m=o(this.parsedUrl,this.spatialReference,T,s,{geometry:p,where:n},R,j,a??void 0),_=N([this.on("send-message-to-socket",u=>m.sendMessageToSocket(u)),this.on("send-message-to-client",u=>m.sendMessageToClient(u))]);return m.once("destroy",_.remove),m}createConnectionParameters(){return{spatialReference:this.spatialReference,customParameters:this.customParameters,definitionExpression:this.definitionExpression,geometryDefinition:this.geometryDefinition,maxReconnectionAttempts:this.maxReconnectionAttempts,maxReconnectionInterval:this.maxReconnectionInterval}}createPopupTemplate(e){return fe(this,e)}createQuery(){const e=new C;return e.returnGeometry=!0,e.outFields=["*"],e.where=this.definitionExpression||"1=1",e}getFieldDomain(e,o){if(!this.fields)return null;let s=null;return this.fields.some(a=>(a.name===e&&(s=a.domain),!!s)),s}getField(e){return this.fieldsIndex.get(e)}serviceSupportsSpatialReference(e){return!0}sendMessageToSocket(e){this.emit("send-message-to-socket",e)}sendMessageToClient(e){this.emit("send-message-to-client",e)}async save(e){return this._debouncedSaveOperations(c.SAVE,e)}async saveAs(e,o){return this._debouncedSaveOperations(c.SAVE_AS,o,e)}write(e,o){const s=o==null?void 0:o.messages;return this.webSocketUrl?(s==null||s.push(S(this,"using a custom websocket connection cannot be written to web scenes and web maps")),null):this.parsedUrl?super.write(e,o):(s==null||s.push(S(this,"using a client-side only connection without a url cannot be written to web scenes and web maps")),null)}async _fetchService(e){var o,s,a;if(!this.webSocketUrl&&this.parsedUrl){if(!this.sourceJSON){const{data:n}=await U(this.parsedUrl.path,{query:{f:"json",...this.customParameters,...this.parsedUrl.query},responseType:"json",signal:e});this.sourceJSON=n}}else{if(!((o=this.timeInfo)!=null&&o.trackIdField))throw new d("stream-layer:missing-metadata","The stream layer trackIdField must be specified.");if(!this.objectIdField){const n=(s=this.fields.find(p=>p.type==="oid"))==null?void 0:s.name;if(!n)throw new d("stream-layer:missing-metadata","The stream layer objectIdField must be specified.");this.objectIdField=n}if(!this.fields)throw new d("stream-layer:missing-metadata","The stream layer fields must be specified.");if(this.fields.some(n=>n.name===this.objectIdField)||this.fields.push(new L({name:this.objectIdField,alias:this.objectIdField,type:"oid"})),!this.geometryType)throw new d("stream-layer:missing-metadata","The stream layer geometryType must be specified.");this.webSocketUrl&&(this.url=this.webSocketUrl)}return this.read(this.sourceJSON,{origin:"service",portalItem:this.portalItem,portal:(a=this.portalItem)==null?void 0:a.portal,url:this.parsedUrl}),f(this.renderer,this.fieldsIndex),V(this.timeInfo,this.fieldsIndex),this.objectIdField||(this.objectIdField="__esri_stream_id__"),ye(this,{origin:"service"})}};t([r({type:String})],i.prototype,"copyright",void 0),t([r({readOnly:!0})],i.prototype,"defaultPopupTemplate",null),t([r({type:String,json:{name:"layerDefinition.definitionExpression",write:{enabled:!0,allowNull:!0}}})],i.prototype,"definitionExpression",void 0),t([r({type:String})],i.prototype,"displayField",void 0),t([r({type:G})],i.prototype,"elevationInfo",void 0),t([r({json:{origins:{"web-map":{read:!1,write:!1},"portal-item":{read:!1,write:!1},"web-scene":{read:!1,write:!1}}}})],i.prototype,"featureReduction",null),t([r(w.fields)],i.prototype,"fields",void 0),t([r(w.fieldsIndex)],i.prototype,"fieldsIndex",void 0),t([r({type:J,json:{name:"layerDefinition.definitionGeometry",write:!0}})],i.prototype,"geometryDefinition",void 0),t([r({type:h.apiValues,json:{read:{reader:h.read}}})],i.prototype,"geometryType",void 0),t([r(oe)],i.prototype,"labelsVisible",void 0),t([r({type:[ue],json:{name:"layerDefinition.drawingInfo.labelingInfo",read:{reader:he},write:!0}})],i.prototype,"labelingInfo",void 0),t([r(se)],i.prototype,"legendEnabled",void 0),t([r({type:["show","hide"],json:{origins:{"portal-item":{read:!1,write:!1}}}})],i.prototype,"listMode",void 0),t([r({type:g})],i.prototype,"maxReconnectionAttempts",void 0),t([r({type:g})],i.prototype,"maxReconnectionInterval",void 0),t([r(ne)],i.prototype,"maxScale",void 0),t([r(ae)],i.prototype,"minScale",void 0),t([r({type:String})],i.prototype,"objectIdField",void 0),t([r({value:"ArcGISStreamLayer",type:["ArcGISStreamLayer"]})],i.prototype,"operationalLayerType",void 0),t([r({readOnly:!0})],i.prototype,"outFields",void 0),t([r(pe)],i.prototype,"popupEnabled",void 0),t([r({type:M,json:{name:"popupInfo",write:!0}})],i.prototype,"popupTemplate",void 0),t([r({type:x})],i.prototype,"purgeOptions",void 0),t([r({json:{read:!1,write:!1}})],i.prototype,"refreshInterval",void 0),t([r({types:Y,json:{origins:{service:{write:{target:"drawingInfo.renderer",enabled:!1}},"web-scene":{name:"layerDefinition.drawingInfo.renderer",types:Z,write:!0}},write:{target:"layerDefinition.drawingInfo.renderer"}}})],i.prototype,"renderer",null),t([b("service","renderer",["drawingInfo.renderer","defaultSymbol"]),b("renderer",["layerDefinition.drawingInfo.renderer","layerDefinition.defaultSymbol"])],i.prototype,"readRenderer",null),t([r((()=>{const e=q(le);return e.json.origins["portal-item"]={read:!1,write:!1},e})())],i.prototype,"screenSizePerspectiveEnabled",void 0),t([r()],i.prototype,"sourceJSON",void 0),t([r({type:$,json:{origins:{service:{read:{source:"spatialReference"}}}}})],i.prototype,"spatialReference",void 0),t([r({json:{read:!1}})],i.prototype,"type",void 0),t([r(de)],i.prototype,"url",void 0),t([r({type:Number})],i.prototype,"updateInterval",void 0),t([r({json:{read:!1,write:!1}})],i.prototype,"useViewTime",void 0),t([r({type:String})],i.prototype,"webSocketUrl",void 0),i=t([I("esri.layers.StreamLayer")],i);const nt=i;export{nt as default};
function __vite__mapDeps(indexes) {
  if (!__vite__mapDeps.viteFileDeps) {
    __vite__mapDeps.viteFileDeps = ["./streamLayerUtils-6MV66K2c.js","./utils-RaS0KmfI.js","./index-eSY5-lt-.js","./index-5m03CWEM.css","./originUtils-1w5HeAJR.js","./multiOriginJSONSupportUtils-R5XHSAtL.js","./jsonContext-YSqJBqeH.js","./portalItemUtils-svYaQgLA.js","./saveAPIKeyUtils-5srUkGVJ.js","./createConnection-1fSEstbR.js","./query-ROhOLudR.js","./pbfQueryUtils-HEDqsMMp.js","./pbf-L_JjT3GM.js","./OptimizedGeometry-CbNXANBG.js","./OptimizedFeature-5RGb7-P9.js","./OptimizedFeatureSet-smVI1ez9.js","./queryZScale-ye882EvB.js"]
  }
  return indexes.map((i) => __vite__mapDeps.viteFileDeps[i])
}