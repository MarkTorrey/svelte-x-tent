import{W as i,X as s,an as H,kl as V,Y as L,aN as nt,Z as M,a2 as T,a5 as z,$ as C,aA as A,dP as at,hn as ot,jZ as rt,j_ as lt,j$ as ut,k0 as dt,iM as Y,jY as pt,lq as R,k2 as ht,o2 as ct,o1 as mt,kd as gt,ke as vt,kh as I,ki as yt,kj as j,hx as wt,kk as B}from"./index-CaKGzNfV.js";import{c as _t}from"./Analysis-Cl5WcUuQ.js";import{o as Pt,M as bt,u as ft}from"./InteractiveAnalysisViewModel-zQO04sVt.js";import{c as Mt,a as N,f as Dt,e as Lt,R as St,q as Vt,B as $t,z as Ot}from"./ShadedColorMaterial.glsl-BAfZMjOn.js";import{R as Ct,N as At,J as Ut,K as xt}from"./colorUtils-DyHwYZ1z.js";import{b as Ht}from"./lineSegment-CX1aHJ54.js";import{o as Tt}from"./dehydratedFeatureUtils-Ch648SIY.js";import{a as kt}from"./RibbonLine.glsl-Dg0oXIM0.js";import{a as Gt,u as Et}from"./MeasurementWidgetContent-DmSyxFfl.js";import"./Octree-CMwEho41.js";import"./Util-Cb0mEw96.js";import"./HUDMaterial.glsl-DEijNEVk.js";import"./NestedMap-GuqgquCN.js";import"./glUtil-18gQt2hs.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./NormalAttribute.glsl-CiOi7uCN.js";import"./interfaces-CJw7Cnm-.js";import"./VertexAttribute-Cq4MnHjR.js";import"./basicInterfaces-CZwQPxTp.js";import"./Geometry-B3hX0nD2.js";import"./orientedBoundingBox-x0xgCGoZ.js";import"./spatialReferenceEllipsoidUtils-7gfyUPFt.js";import"./computeTranslationToOriginAndRotation-C5ITxglo.js";import"./renderState-D7eLLRBA.js";import"./BindType-BmZEZMMh.js";import"./boundedPlane-CvNO9h5s.js";import"./AlphaCutoff-UcccL64p.js";import"./requestImageUtils-BKpucjI-.js";import"./BufferView-BnR-WMub.js";import"./Indices-tTCnngdH.js";import"./triangle-C5yiumcc.js";import"./VertexArrayObject-BCnWy2xY.js";import"./floatRGBA-DY2D0BcH.js";import"./InterleavedLayout-4ahhYnBx.js";import"./types-D0PSWh4d.js";import"./BufferObject-uw--nqD4.js";import"./ColorMaterial-CQszLCQN.js";import"./axisAngleDegrees-DBXqOTI8.js";import"./IntersectorInterfaces-BgX4KEwK.js";import"./SnappingVisualizer-BlYT5MPW.js";import"./PointSnappingHint-DrPi0ubk.js";import"./doublePrecisionUtils-B0owpBza.js";import"./vec3f32-nZdmKIgz.js";let f=class extends _t{constructor(t){super(t),this.type="direct-line-measurement",this.startPoint=null,this.endPoint=null,this.unit=null}get requiredPropertiesForEditing(){return[this.startPoint,this.endPoint]}clear(){this.startPoint=null,this.endPoint=null}};i([s({type:["direct-line-measurement"]})],f.prototype,"type",void 0),i([s({type:H})],f.prototype,"startPoint",void 0),i([s({type:H})],f.prototype,"endPoint",void 0),i([s({type:V,value:null})],f.prototype,"unit",void 0),i([s({readOnly:!0})],f.prototype,"requiredPropertiesForEditing",null),f=i([L("esri.analysis.DirectLineMeasurementAnalysis")],f);const Z=f;var k;(function(t){t[t.Auto=0]="Auto",t[t.Euclidean=1]="Euclidean",t[t.Geodesic=2]="Geodesic"})(k||(k={}));var $,W;(function(t){t[t.None=0]="None",t[t.Direct=1]="Direct",t[t.Triangle=2]="Triangle",t[t.ProjectedGeodesic=3]="ProjectedGeodesic"})($||($={})),function(t){t[t.Auto=0]="Auto",t[t.AboveSegment=1]="AboveSegment",t[t.BelowSegment=2]="BelowSegment"}(W||(W={}));var D;(function(t){t.Manipulators="manipulators",t.AnalysisViewDestroyed="analysis-view-destroyed",t.AnalysisView="analysis-view"})(D||(D={}));let d=class extends nt{constructor(t){super(t),this.cursorPoint=null,this._visible=!1,this._laserLine=null,this.laserLineEnabled=!0,this._lastDraggedHandle=null}initialize(){this._laserLine=new Mt({view:this.view,attached:!0,isDecoration:!0}),this._updateVisibility(this._visible),this._connectToAnalysisView(),this.addHandles(M(()=>this._params,({laserLineGlowColor:t,laserLineInnerColor:e,laserLineGlobalAlpha:a})=>{const n=this._laserLine,l=n.style;n.style={...l,innerColor:e,glowColor:t,globalAlpha:a}}))}destroy(){this._laserLine=T(this._laserLine)}get _params(){const{accentColor:t}=this.view.effectiveTheme;return{laserLineGlowColor:z.toUnitRGB(t),laserLineGlowWidth:8,laserLineGlowFalloff:8,laserLineInnerColor:z.toUnitRGB(Ct(t)),laserLineInnerWidth:.75,laserLineGlobalAlpha:.75*t.a,handleColor:At(t,.5),handleRadius:5}}get visible(){return this._visible}set visible(t){t?this.show():this.hide()}get testData(){}get _cursorPosition(){const t=A(),e=this.cursorPoint;return e&&this.view.renderCoordsHelper.toRenderCoords(e,t),t}get _startPosition(){const t=A(),e=this.analysis.startPoint;return e&&this.view.renderCoordsHelper.toRenderCoords(e,t),t}get _endPosition(){const t=A(),e=this.analysis.endPoint;return e&&this.view.renderCoordsHelper.toRenderCoords(e,t),t}get _laserLineParams(){const t=this._focusPosition,{active:e,lineState:a}=this.toolState,n=this.analysisViewData,l=this.laserLineEnabled&&!!t&&a!=="measured"&&e;if(!l||!this.visible||n==null||n.destroyed)return{heightManifoldTarget:null,pointDistanceLine:null,lineVerticalPlaneSegment:null};const r=n.actualVisualizedMeasurement,o=this.view.viewingMode!=="local"&&l&&!!this.analysis.startPoint&&r==="geodesic",p=l&&n.viewMode===$.Triangle;return{heightManifoldTarget:r==="euclidean"?t:null,pointDistanceLine:o?this._pointDistanceLine:null,lineVerticalPlaneSegment:p?Ht(this._startPosition,this._endPosition):null}}get _focusPosition(){const{lineState:t}=this.toolState,e=this.analysisViewData,a=e!=null&&!e.destroyed&&e.measurementMode===k.Euclidean&&e.viewMode===$.Direct;switch(t){case"drawing":return a?this._startPosition:this.analysis.endPoint?this._endPosition:this._startPosition;case"editing":return a?this._lastDraggedHandle==="start"?this._endPosition:this._startPosition:this._lastDraggedHandle==="start"?this._startPosition:this._endPosition;default:return this.cursorPoint!=null?this._cursorPosition:null}}get _pointDistanceLine(){return{origin:this.toolState.lineState==="drawing"||this._lastDraggedHandle==="end"?this._startPosition:this._endPosition,target:this._focusPosition}}createManipulators(){const t=this._params,{view:e}=this,a=()=>{const u=Dt(t.handleColor),b=[new Lt(Tt(u,1,32,32))],_=new N({view:e,renderObjects:b});return _.available=!1,_.radius=t.handleRadius,[_,u]},[n,l]=a(),[r,o]=a(),p=new N({view:this.view,available:!1,interactive:!1});this.analysis.startPoint!=null&&(n.location=this.analysis.startPoint,n.available=!0),this.analysis.endPoint!=null&&(r.location=this.analysis.endPoint,r.available=!0);const m=()=>{let u=this._lastDraggedHandle;n.grabbing&&!r.grabbing&&(u="start"),r.grabbing&&!n.grabbing&&(u="end"),n.grabbing||r.grabbing||(u=null),this._lastDraggedHandle=u},P=n.events.on("grab-changed",m),w=r.events.on("grab-changed",m);return this.addHandles([P,w,M(()=>xt(this._params.handleColor),u=>{l.setParameters({color:u}),o.setParameters({color:u})},{equals:Ut})],D.Manipulators),{start:n,end:r,cursor:p}}show(){this.destroyed||this._visible||this._updateVisibility(!0)}hide(){!this.destroyed&&this._visible&&this._updateVisibility(!1)}_connectToAnalysisView(){this.removeHandles(D.AnalysisView),this.addHandles([M(()=>{var t;return(t=this.analysisViewData)==null?void 0:t.destroyed},t=>{t&&this.removeHandles(D.AnalysisView)},C),M(()=>[this.toolState.lineState==="measured",this.analysisViewData],([t,e])=>{e==null||e.destroyed||(e.allowVisualElementsOrientationChange=!t)},C),M(()=>this._laserLineParams,t=>{const e=this._laserLine;e.heightManifoldTarget=t.heightManifoldTarget,e.pointDistanceLine=t.pointDistanceLine,e.lineVerticalPlaneSegment=t.lineVerticalPlaneSegment},C)],D.AnalysisView)}_updateVisibility(t){this.initialized&&(this._visible=t,t?this._laserLine.style={innerColor:this._params.laserLineInnerColor,innerWidth:this._params.laserLineInnerWidth,glowColor:this._params.laserLineGlowColor,glowWidth:this._params.laserLineGlowWidth,glowFalloff:this._params.laserLineGlowFalloff,globalAlpha:this._params.laserLineGlobalAlpha}:this.view.cursor=null,this._laserLine.visible=t)}};i([s({constructOnly:!0})],d.prototype,"view",void 0),i([s()],d.prototype,"_params",null),i([s({constructOnly:!0})],d.prototype,"analysis",void 0),i([s({constructOnly:!0})],d.prototype,"analysisViewData",void 0),i([s()],d.prototype,"cursorPoint",void 0),i([s()],d.prototype,"toolState",void 0),i([s()],d.prototype,"visible",null),i([s()],d.prototype,"testData",null),i([s()],d.prototype,"_visible",void 0),i([s()],d.prototype,"_laserLine",void 0),i([s({constructOnly:!0})],d.prototype,"laserLineEnabled",void 0),i([s()],d.prototype,"_cursorPosition",null),i([s()],d.prototype,"_startPosition",null),i([s()],d.prototype,"_endPosition",null),i([s()],d.prototype,"_lastDraggedHandle",void 0),i([s()],d.prototype,"_laserLineParams",null),i([s()],d.prototype,"_focusPosition",null),i([s()],d.prototype,"_pointDistanceLine",null),d=i([L("esri.views.3d.interactive.measurementTools.directLineMeasurement3D.DirectLineMeasurement3DView")],d);let h=class extends Pt{constructor(t){super(t),this._updatingHandles=new at,this._emulatedDrag=null,this.lineState="initial",this.startPointSurfaceLocation=null,this.endPointSurfaceLocation=null,this.cursorPointSurfaceLocation=null,this.startManipulator=null,this.endManipulator=null,this.cursorManipulator=null,this._getSnappingContext=ot(e=>new rt({elevationInfo:{mode:"absolute-height",offset:0},pointer:e,editGeometryOperations:new lt(new ut("point",dt(!0,!1,this.view.spatialReference)),this.view.state.viewingMode),visualizer:new St}))}initialize(){const{view:t,analysis:e,analysisViewData:a,visible:n}=this;this.measurementView=new d({toolState:this,view:t,analysis:e,analysisViewData:a,visible:n});const l=Gt(t);this._snappingManagerResult=l,this.addHandles(l);const{start:r,end:o,cursor:p}=this.measurementView.createManipulators(),m=(w,u,b)=>ht(w,(_,K,S,G)=>{const E=Ot(_),X=this._snappingManager,Q=this._getSnappingContext(G),tt=this._updatingHandles,{lineState:et}=this;S=S.next(E).next(ct(this,[b,u])).next(g=>{if(u!=="cursorPoint"){const v=this.analysis[u];v!=null&&(_.location=v)}return g});const it=$t(this.view),st=g=>{const v=it(g);return v||this.lineState!=="drawing"&&this.lineState!=="initial"||(this[u]=null,this[b]=null),v};let O=K.next(E).next(st);if(G!=="touch"||et==="editing"){const{snappingStep:g,cancelSnapping:v}=gt({snappingManager:X,snappingContext:Q,updatingHandles:tt});S=S.next(v),O=O.next(...g)}O.next(g=>g.action!=="start"?g:null).next(g=>{const v=mt(g.mapEnd,new H);this[u]=v,_.location=v,this[b]=this._surfaceLocation(v,g.surfaceType)})}),P=w=>w.events.on("grab-changed",()=>{const u=r.grabbing||o.grabbing;this.lineState=u?"editing":"measured"});this.addHandles([m(r,"startPoint","startPointSurfaceLocation"),m(o,"endPoint","endPointSurfaceLocation"),m(p,"cursorPoint","cursorPointSurfaceLocation"),P(r),P(o)]),this.manipulators.add(r),this.manipulators.add(o),this.manipulators.add(p),this.startManipulator=r,this.endManipulator=o,this.cursorManipulator=p,this.addHandles(M(()=>this.state,w=>{w==="measured"&&this.finishToolCreation()},Y)),pt(this)}destroy(){this._updatingHandles=T(this._updatingHandles),this.measurementView=T(this.measurementView)}get _snappingManager(){return this._snappingManagerResult.snappingManager}get state(){const{analysis:t}=this;if(t.startPoint==null&&t.endPoint==null)return"ready";const{lineState:e}=this;return this.validMeasurement&&e!=="editing"&&e!=="drawing"?"measured":"measuring"}get cursor(){return this.state==="ready"||this.lineState==="drawing"?"crosshair":null}get startPoint(){return this.analysis.startPoint}set startPoint(t){this.analysis.startPoint=t}get endPoint(){return this.analysis.endPoint}set endPoint(t){this.analysis.endPoint=t}get cursorPoint(){return this.measurementView.cursorPoint}set cursorPoint(t){this.measurementView.cursorPoint=t}get snappingOptions(){return this._snappingManager.options}get validMeasurement(){return this.analysis.startPoint!=null&&this.analysis.endPoint!=null}get updating(){return this._updatingHandles.updating||this._snappingManager.updating}onShow(){this.measurementView.show(),this._updateManipulatorAvailability()}onHide(){this.measurementView.hide()}onDeactivate(){var t;(t=this._emulatedDrag)==null||t.cancel(),this._emulatedDrag=null}onInputEvent(t){switch(t.type){case"immediate-click":this._handleImmediateClick(t);break;case"pointer-move":this._handlePointerMove(t)}this._updateManipulatorAvailability()}_handlePointerMove(t){var p,m;if(!this.active||this.view.navigating)return;const{pointerType:e}=t;if(e!=="mouse")return;const a=R(t),{lineState:n,cursorManipulator:l,endManipulator:r}=this;let o=!1;this.cursorPoint==null&&((p=this._emulatedDrag)==null||p.cancel(),this._emulatedDrag=U(l,e,a),o=!0),n==="initial"&&((m=this._emulatedDrag)==null||m.update(a),o=!0),n==="drawing"&&(r.events.emit("drag",{action:"update",start:a,screenPoint:a}),o=!0),o&&t.stopPropagation()}_handleImmediateClick(t){var m,P,w,u,b;if(!this.active||!bt(t))return;const e=R(t),{pointerType:a}=t,{cursorManipulator:n,startManipulator:l,endManipulator:r,lineState:o}=this;let p=!1;switch(this.cursorPoint==null&&((m=this._emulatedDrag)==null||m.cancel(),this._emulatedDrag=U(n,a,e)),o){case"initial":if((P=this._emulatedDrag)==null||P.update(e),this.cursorPoint!=null){(w=this._emulatedDrag)==null||w.end(e),this._emulatedDrag=null;const{cursorPoint:_}=this;this.startPoint=_,this.startPointSurfaceLocation=this.cursorPointSurfaceLocation,l.location=_,l.interactive=!1,r.interactive=!1,this.lineState="drawing",this._emulatedDrag=U(r,a,e),p=!0}break;case"drawing":(u=this._emulatedDrag)==null||u.update(e),this.endPoint!=null&&((b=this._emulatedDrag)==null||b.end(e),this._emulatedDrag=null,l.interactive=!0,r.interactive=!0,this.lineState="measured",p=!0)}p&&t.stopPropagation()}_surfaceLocation(t,e){return e===Vt.GROUND?"on-the-surface":(t.z??0)>=this._getElevation(t)?"above-the-surface":"below-the-surface"}_updateManipulatorAvailability(){this.startManipulator.available=this.analysis.startPoint!=null,this.endManipulator.available=this.analysis.endPoint!=null}_getElevation(t){return this.view.basemapTerrain.ready?kt(this.view.elevationProvider,t)??0:0}get test(){}};function U(t,e,a){return t.events.emit("drag",{action:"start",pointerType:e,start:a,screenPoint:a}),{update:n=>t.events.emit("drag",{action:"update",start:n,screenPoint:n}),end:n=>t.events.emit("drag",{action:"end",start:n,screenPoint:n}),cancel:()=>t.events.emit("drag",{action:"cancel"})}}i([s({readOnly:!0})],h.prototype,"state",null),i([s()],h.prototype,"lineState",void 0),i([s({readOnly:!0})],h.prototype,"cursor",null),i([s()],h.prototype,"startPoint",null),i([s()],h.prototype,"endPoint",null),i([s()],h.prototype,"cursorPoint",null),i([s({constructOnly:!0})],h.prototype,"analysis",void 0),i([s({constructOnly:!0})],h.prototype,"analysisViewData",void 0),i([s()],h.prototype,"measurementView",void 0),i([s({constructOnly:!0})],h.prototype,"view",void 0),i([s({readOnly:!0})],h.prototype,"validMeasurement",null),i([s({value:null})],h.prototype,"startPointSurfaceLocation",void 0),i([s({value:null})],h.prototype,"endPointSurfaceLocation",void 0),i([s({value:null})],h.prototype,"cursorPointSurfaceLocation",void 0),i([s()],h.prototype,"updating",null),h=i([L("esri.views.3d.interactive.measurementTools.directLineMeasurement3D.DirectLineMeasurement3DTool")],h);const zt=h;let y=class extends ft{constructor(e){super(e),this.analysis=null,this.supportedViewType="3d",this.unsupportedErrorMessage="DirectLineMeasurement3DViewModel is only supported in 3D views.",this._userUnit=null,this._userUnitOptions=null}initialize(){this.addHandles(M(()=>({analysis:this.analysis,unit:this.unit}),({analysis:e,unit:a})=>{e!=null&&(e.unit=a)},Y))}get state(){return this.disabled||!this.ready?"disabled":this.tool==null?"ready":this.tool.state}get measurement(){var o;const{tool:e}=this;if(e==null)return null;const a=()=>({text:null,state:"unavailable"}),n=p=>({text:p,state:"available"}),{analysisViewData:l}=e,r=l.result!=null;return{mode:((o=l.result)==null?void 0:o.mode)??"euclidean",directDistance:r&&l.actualVisualizedMeasurement==="euclidean"?n(l.directLabelText):a(),horizontalDistance:r?n(l.horizontalLabelText):a(),verticalDistance:r?n(l.verticalLabelText):a()}}set unitOptions(e){this._userUnitOptions=e,this._set("unitOptions",this._filteredOrAllUnits(this._userUnitOptions))}get unitOptions(){return this._filteredOrAllUnits(this._userUnitOptions)}set unit(e){this._userUnit=e?this._findSelectableUnit(e,this._userUnit):null}get unit(){return this._userUnit?(this._userUnit=this._findSelectableUnit(this._userUnit,this.defaultUnit),this._userUnit):this._findSelectableUnit(this.defaultUnit)}constructAnalysis(){return new Z}constructTool(){return new zt({view:this.view,analysis:this.analysis,analysisViewData:this.analysisView,visible:this.visible})}_findSelectableUnit(e,a){const n=this.unitOptions;return n.includes(e)?e:a?this._findSelectableUnit(a):n[0]}_filteredOrAllUnits(e){if(!e)return V.slice();const a=e.filter(n=>V.includes(n));return a.length===0?V.slice():a}};i([s({type:Z})],y.prototype,"analysis",void 0),i([s({readOnly:!0})],y.prototype,"state",null),i([s({readOnly:!0})],y.prototype,"measurement",null),i([s()],y.prototype,"unitOptions",null),i([s()],y.prototype,"unit",null),i([s(vt)],y.prototype,"defaultUnit",void 0),i([s()],y.prototype,"_userUnit",void 0),i([s()],y.prototype,"_userUnitOptions",void 0),y=i([L("esri.widgets.DirectLineMeasurement3D.DirectLineMeasurement3DViewModel")],y);const J=y,q="esri-direct-line-measurement-3d",F={base:q,newMeasurementButton:`${q}__clear-button`};let c=class extends yt{constructor(t,e){super(t,e),this.messages=null,this.messagesCommon=null,this.viewModel=new J}get view(){return this.viewModel.view}set view(t){this.viewModel.view=t}get visible(){return this.viewModel.visible}set visible(t){this.viewModel.visible=t}get active(){return this.viewModel.active}get analysis(){return this.viewModel.analysis}set analysis(t){this.viewModel.analysis=t}get icon(){return"measure-line"}set icon(t){this._overrideIfSome("icon",t)}get label(){var t;return((t=this.messages)==null?void 0:t.widgetLabel)??""}set label(t){this._overrideIfSome("label",t)}get unitOptions(){return this.viewModel.unitOptions}set unitOptions(t){this.viewModel.unitOptions=t}get unit(){return this.viewModel.unit}set unit(t){this.viewModel.unit=t}render(){const{messages:t,messagesCommon:e,unit:a,unitOptions:n,viewModel:l}=this,{active:r,measurement:o,state:p,supported:m}=l;return j("div",{"aria-label":this.messages.widgetLabel,class:this.classes(F.base,B.widget,B.panel),key:this,role:"presentation"},this.visible?j(Et,{active:r,measurementItems:[{key:"direct",title:t.direct,value:x(o==null?void 0:o.directDistance)},{key:"horizontal",title:t.horizontal,value:x(o==null?void 0:o.horizontalDistance)},{key:"vertical",title:t.vertical,value:x(o==null?void 0:o.verticalDistance)}],messages:{...t,notApplicable:e==null?void 0:e.notApplicable},newMeasurementButtonClass:F.newMeasurementButton,state:p,supported:m,unit:a,unitOptions:n,onNewMeasurementClick:()=>{wt(this.viewModel.start())},onUnitChange:P=>{this.unit=P}}):null)}};function x(t){return(t==null?void 0:t.state)==="available"?t.text:null}i([s()],c.prototype,"view",null),i([s()],c.prototype,"visible",null),i([s()],c.prototype,"active",null),i([s({constructOnly:!0,nonNullable:!0})],c.prototype,"analysis",null),i([s()],c.prototype,"icon",null),i([s()],c.prototype,"label",null),i([s(),I("esri/widgets/DirectLineMeasurement3D/t9n/DirectLineMeasurement3D")],c.prototype,"messages",void 0),i([s(),I("esri/t9n/common")],c.prototype,"messagesCommon",void 0),i([s()],c.prototype,"uiStrings",void 0),i([s({type:J})],c.prototype,"viewModel",void 0),i([s()],c.prototype,"unitOptions",null),i([s()],c.prototype,"unit",null),c=i([L("esri.widgets.DirectLineMeasurement3D")],c);const Ce=c;export{Ce as default};
