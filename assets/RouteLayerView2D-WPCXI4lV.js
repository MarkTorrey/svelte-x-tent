import{V as l,C as u,P as _,v as p,e as c,o as g,l as n,m as d,n as w}from"./index-eSY5-lt-.js";import{m as y,c as f,C as k,T as M,j as V,S as v,O as G}from"./Stop-0sA5wmG_.js";import{m as I}from"./LayerView2D-fHeQM5c3.js";import{i as F}from"./GraphicContainer-Pp_yEz1D.js";import{r as C}from"./GraphicsView2D-i7e92lLy.js";import{u as H}from"./LayerView-CRo_qb-x.js";import"./Container-AO0ma2pG.js";import"./EffectView-eHJp2ynv.js";import"./definitions-otzk_d_r.js";import"./enums-8pc8f5Ge.js";import"./Texture-4vQG0qLG.js";import"./color-Y1HD3ytM.js";import"./enums--FbEXJ87.js";import"./VertexElementDescriptor-0hGjloLE.js";import"./number-sTjsTbdA.js";import"./BaseGraphicContainer-i9-NOgp7.js";import"./FeatureContainer-x5rBbMr_.js";import"./AttributeStoreView-v_U2sesH.js";import"./TiledDisplayObject-yP0_0rbx.js";import"./diffUtils-x5OXhJZZ.js";import"./labelingInfo-Ik6k9hmR.js";import"./LabelClass-Ii0xtB2a.js";import"./labelUtils-x_C8o7Up.js";import"./defaults--brCOrwa.js";import"./defaultsJSON-x-mq3Ho7.js";import"./jsonUtils-1IxKPsH1.js";import"./WGLContainer-NUKBXko_.js";import"./FramebufferObject-FWwprw92.js";import"./VertexArrayObject-whl5pCEr.js";import"./vec4f32-NvfHy9q7.js";import"./ProgramTemplate-mAY_399P.js";import"./GeometryUtils-PBUEihia.js";import"./alignmentUtils-XT3TYmYW.js";import"./heatmapUtils-QdzYLNxE.js";import"./StyleDefinition-ohiNeWtS.js";import"./config-z2KFXUcx.js";import"./earcut-wP_5WnqY.js";import"./featureConversionUtils-91rcTs0M.js";import"./OptimizedFeature-5RGb7-P9.js";import"./OptimizedFeatureSet-smVI1ez9.js";import"./OptimizedGeometry-CbNXANBG.js";import"./visualVariablesUtils-lT9viKWj.js";import"./cimAnalyzer-DsuWkQlK.js";import"./fontUtils-GE0ho--n.js";import"./BidiEngine-8z8MVveq.js";import"./labelPoint-mThgM4t0.js";import"./GeometryUtils-CEMOhUyj.js";import"./utils-jQLeeGOF.js";import"./Rect-pT1ASav_.js";import"./callExpressionWithFeature-rytrJuuz.js";import"./quantizationUtils-DTwa03mn.js";import"./floatRGBA-9E5qKLsz.js";import"./ExpandedCIM-bbZk55Wb.js";import"./clusterUtils-kJgVNgUU.js";import"./MD5-uECS9GB-.js";import"./SizeVariable-221gAT5i.js";import"./colorRamps-rojoPCoV.js";import"./LegendOptions-x-5oaDqO.js";import"./util-7E7JUKUD.js";import"./TileContainer-Dws-iayU.js";import"./vec3f32-cbLeGFQ-.js";import"./normalizeUtilsSync-vawo822E.js";import"./projectionSupport-7ZBNFFZX.js";import"./json-v6EOeNTY.js";import"./Matcher-Mv_XwJSb.js";import"./tileUtils-pcBJnprf.js";import"./TurboLine-lq2gJIeK.js";import"./LRUCache-mFQSPLKh.js";import"./ComputedAttributeStorage-JNIiBSw3.js";import"./FieldsIndex-_W1Us-oq.js";import"./UnknownTimeZone-iVS1S_Kf.js";import"./TimeOnly-WOAkj6tI.js";const U=["route-info","direction-line","direction-point","polygon-barrier","polyline-barrier","point-barrier","stop"],o={graphic:null,property:null,oldValue:null,newValue:null};function m(t){return t instanceof y||t instanceof f||t instanceof k||t instanceof M||t instanceof V||t instanceof v||t instanceof G}function $(t){return l.isCollection(t)&&t.length&&m(t.at(0))}function b(t){return Array.isArray(t)&&t.length>0&&m(t[0])}let a=class extends I(H){constructor(){super(...arguments),this._graphics=new l,this._highlightIds=new Map,this._networkFeatureMap=new Map,this._networkGraphicMap=new Map}get _routeItems(){return new u({getCollections:()=>this.layer==null||this.destroyed?[]:[this.layer.routeInfo!=null?new l([this.layer.routeInfo]):null,this.layer.directionLines,this.layer.directionPoints,this.layer.polygonBarriers,this.layer.polylineBarriers,this.layer.pointBarriers,this.layer.stops]})}initialize(){this._updatingHandles.addOnCollectionChange(()=>this._routeItems,t=>this._routeItemsChanged(t),_)}destroy(){var t;this._networkFeatureMap.clear(),this._networkGraphicMap.clear(),this._graphics.removeAll(),(t=this._get("_routeItems"))==null||t.destroy()}attach(){this._createGraphicsView()}detach(){this._destroyGraphicsView()}async fetchPopupFeatures(t){return this._graphicsView.hitTest(t).filter(i=>!!i.popupTemplate)}highlight(t){let i;i=m(t)?[this._getNetworkFeatureUid(t)]:b(t)?t.map(r=>this._getNetworkFeatureUid(r)):$(t)?t.map(r=>this._getNetworkFeatureUid(r)).toArray():[t.uid];const e=i.filter(p);return e.length?(this._addHighlight(e),c(()=>this._removeHighlight(e))):c()}async hitTest(t,i){if(this.suspended)return null;const e=this._graphicsView.hitTest(t).filter(p).map(s=>this._networkGraphicMap.get(s));if(!e.length)return null;const{layer:r}=this;return e.reverse().map(s=>({type:"route",layer:r,mapPoint:t,networkFeature:s}))}isUpdating(){return this._graphicsView.updating}moveStart(){}moveEnd(){}update(t){this._graphicsView.processUpdate(t)}viewChange(){this._graphicsView.viewChange()}_addHighlight(t){for(const i of t)if(this._highlightIds.has(i)){const e=this._highlightIds.get(i);this._highlightIds.set(i,e+1)}else this._highlightIds.set(i,1);this._updateHighlight()}_createGraphic(t){const i=t.toGraphic();return i.layer=this.layer,i.sourceLayer=this.layer,i}_createGraphicsView(){const t=this.view,i=()=>this.requestUpdate(),e=new F(t.featuresTilingScheme);this._graphicsView=new C({container:e,graphics:this._graphics,requestUpdateCallback:i,view:t}),this.container.addChild(e),this._updateHighlight()}_destroyGraphicsView(){this.container.removeChild(this._graphicsView.container),this._graphicsView.destroy()}_getDrawOrder(t){const i=this._networkGraphicMap.get(t);return U.indexOf(i.type)}_getNetworkFeatureUid(t){return this._networkFeatureMap.has(t)?this._networkFeatureMap.get(t).uid:null}_removeHighlight(t){for(const i of t)if(this._highlightIds.has(i)){const e=this._highlightIds.get(i)-1;e===0?this._highlightIds.delete(i):this._highlightIds.set(i,e)}this._updateHighlight()}_routeItemsChanged(t){if(t.removed.length){this._graphics.removeMany(t.removed.map(i=>{const e=this._networkFeatureMap.get(i);return this._networkFeatureMap.delete(i),this._networkGraphicMap.delete(e),e}));for(const i of t.removed)this.removeHandles(i)}if(t.added.length){this._graphics.addMany(t.added.map(i=>{const e=this._createGraphic(i);return e.symbol==null?null:(this._networkFeatureMap.set(i,e),this._networkGraphicMap.set(e,i),e)}).filter(p));for(const i of t.added)this.addHandles([g(()=>i.geometry,(e,r)=>{this._updateGraphic(i,"geometry",e,r)}),g(()=>i.symbol,(e,r)=>{this._updateGraphic(i,"symbol",e,r)})],i);this._graphics.sort((i,e)=>this._getDrawOrder(i)-this._getDrawOrder(e))}}_updateGraphic(t,i,e,r){if(!this._networkFeatureMap.has(t)){const h=this._createGraphic(t);return this._networkFeatureMap.set(t,h),this._networkGraphicMap.set(h,t),void this._graphics.add(h)}const s=this._networkFeatureMap.get(t);s[i]=e,o.graphic=s,o.property=i,o.oldValue=r,o.newValue=e,this._graphicsView.graphicUpdateHandler(o)}_updateHighlight(){const t=Array.from(this._highlightIds.keys());this._graphicsView.setHighlight(t)}};n([d()],a.prototype,"_graphics",void 0),n([d()],a.prototype,"_routeItems",null),a=n([w("esri.views.2d.layers.RouteLayerView2D")],a);const Wt=a;export{Wt as default};
