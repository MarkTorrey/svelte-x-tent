import{l,n as d,o as u,P as y,D as h,E as c}from"./index-eSY5-lt-.js";import b from"./FeatureLayerView2D-AHj272U4.js";import"./EffectView-eHJp2ynv.js";import"./FeatureSet-mcxSPZVd.js";import"./definitions-otzk_d_r.js";import"./LayerView2D-fHeQM5c3.js";import"./Container-AO0ma2pG.js";import"./enums-8pc8f5Ge.js";import"./Texture-4vQG0qLG.js";import"./AttributeStoreView-v_U2sesH.js";import"./TiledDisplayObject-yP0_0rbx.js";import"./diffUtils-x5OXhJZZ.js";import"./labelingInfo-Ik6k9hmR.js";import"./LabelClass-Ii0xtB2a.js";import"./labelUtils-x_C8o7Up.js";import"./defaults--brCOrwa.js";import"./defaultsJSON-x-mq3Ho7.js";import"./jsonUtils-1IxKPsH1.js";import"./color-Y1HD3ytM.js";import"./enums--FbEXJ87.js";import"./VertexElementDescriptor-0hGjloLE.js";import"./number-sTjsTbdA.js";import"./WGLContainer-NUKBXko_.js";import"./FramebufferObject-FWwprw92.js";import"./VertexArrayObject-whl5pCEr.js";import"./vec4f32-NvfHy9q7.js";import"./ProgramTemplate-mAY_399P.js";import"./GeometryUtils-PBUEihia.js";import"./alignmentUtils-XT3TYmYW.js";import"./heatmapUtils-QdzYLNxE.js";import"./StyleDefinition-ohiNeWtS.js";import"./config-z2KFXUcx.js";import"./earcut-wP_5WnqY.js";import"./featureConversionUtils-91rcTs0M.js";import"./OptimizedFeature-5RGb7-P9.js";import"./OptimizedFeatureSet-smVI1ez9.js";import"./OptimizedGeometry-CbNXANBG.js";import"./visualVariablesUtils-lT9viKWj.js";import"./cimAnalyzer-DsuWkQlK.js";import"./fontUtils-GE0ho--n.js";import"./BidiEngine-8z8MVveq.js";import"./labelPoint-mThgM4t0.js";import"./GeometryUtils-CEMOhUyj.js";import"./utils-jQLeeGOF.js";import"./Rect-pT1ASav_.js";import"./callExpressionWithFeature-rytrJuuz.js";import"./quantizationUtils-DTwa03mn.js";import"./floatRGBA-9E5qKLsz.js";import"./ExpandedCIM-bbZk55Wb.js";import"./clusterUtils-kJgVNgUU.js";import"./MD5-uECS9GB-.js";import"./SizeVariable-221gAT5i.js";import"./colorRamps-rojoPCoV.js";import"./LegendOptions-x-5oaDqO.js";import"./util-7E7JUKUD.js";import"./BitmapTileContainer-zWhyqFAw.js";import"./Bitmap-Qg1VS7OT.js";import"./TileContainer-Dws-iayU.js";import"./CircularArray-1_thnT0U.js";import"./BufferPool-U4f6W5v-.js";import"./FeatureContainer-x5rBbMr_.js";import"./commonProperties-Z7yNesJQ.js";import"./FeatureEffect-PYWUFKjR.js";import"./popupUtils-CDV9bUjJ.js";import"./LayerView-CRo_qb-x.js";import"./RefreshableLayerView-FnCvUyzs.js";function g(e,i){return!e.visible||e.minScale!==0&&i>e.minScale||e.maxScale!==0&&i<e.maxScale}let p=class extends b{initialize(){this.addHandles([u(()=>this.view.scale,()=>this._update(),y)],"constructor")}isUpdating(){var n;const e=this.layer.sublayers.some(a=>a.renderer!=null),i=this._commandsQueue.updating,o=this._updatingRequiredFieldsPromise!=null,t=!this._proxy||!this._proxy.isReady,r=this._pipelineIsUpdating,s=this.tileRenderer==null||((n=this.tileRenderer)==null?void 0:n.updating),m=e&&(i||o||t||r||s);return h("esri-2d-log-updating")&&console.log(`Updating FLV2D: ${m}
  -> hasRenderer ${e}
  -> hasPendingCommand ${i}
  -> updatingRequiredFields ${o}
  -> updatingProxy ${t}
  -> updatingPipeline ${r}
  -> updatingTileRenderer ${s}
`),m}_injectOverrides(e){let i=super._injectOverrides(e);const o=this.view.scale,t=this.layer.sublayers.filter(s=>g(s,o)).map(s=>s.subtypeCode);if(!t.length)return i;i=i??new c().toJSON();const r=`NOT ${this.layer.subtypeField} IN (${t.join(",")})`;return i.where=i.where?`(${i.where}) AND (${r})`:r,i}_setLayersForFeature(e){const i=this.layer.fieldsIndex.get(this.layer.subtypeField),o=e.attributes[i.name],t=this.layer.sublayers.find(r=>r.subtypeCode===o);e.layer=e.sourceLayer=t}_createSchemaConfig(){const e={subtypeField:this.layer.subtypeField,sublayers:Array.from(this.layer.sublayers).map(r=>({featureReduction:null,geometryType:this.layer.geometryType,labelingInfo:r.labelingInfo,labelsVisible:r.labelsVisible,renderer:r.renderer,subtypeCode:r.subtypeCode,orderBy:null}))},i=this.layer.sublayers.map(r=>r.subtypeCode).join(","),o=this.layer.sublayers.length?`${this.layer.subtypeField} IN (${i})`:"1=2";let t=this.layer.definitionExpression?this.layer.definitionExpression+" AND ":"";return t+=o,{...super._createSchemaConfig(),...e,definitionExpression:t}}};p=l([d("esri.views.2d.layers.SubtypeGroupLayerView2D")],p);const Pi=p;export{Pi as default};
