import{cR as G,aL as X,l as n,m as o,n as b,ag as H,kc as Q,o as v,fV as q,hi as V,P as I,ad as K,t as A,bj as z,gn as Y,kd as ee,ke as te,kf as ie,V as se,kg as ne,ae,kh as j,e as re,b0 as oe,fo as le,c5 as Z,g7 as de,ei as ue,g$ as he,f1 as pe,v as U,eR as ce,aB as ye,cu as ge,a$ as fe,fr as _e,ki as we,kj as ve,bB as D,e_ as me,gO as _,B as Se,j9 as W,eq as Ie,kk as be,el as ke,_ as Oe}from"./index-eSY5-lt-.js";import{t as He}from"./memoize-uBdPJ80n.js";import{W as Te,$ as Ee,a as Fe}from"./boundedPlane-l8xUIJF_.js";import{o as $e,a as Ce}from"./queryEngineUtils-SOTtx6Iw.js";import{h as Pe}from"./WorkerHandle-g1Y81Hug.js";import"./lineSegment-EzA48HN-.js";import"./VertexSnappingCandidate-UrIt3CGy.js";import"./PointSnappingHint-gEubw2iI.js";function M(e,t){return Ee(t.extent,J),Fe(J,G(Me,e.x,e.y,0))}const J=Te(),Me=X();let f=class extends H{get tiles(){const t=this.tilesCoveringView,s=this.pointOfInterest!=null?this.pointOfInterest:this.view.center;return t.sort((a,i)=>M(s,a)-M(s,i)),t}_scaleEnabled(){return Q(this.view.scale,this.layer.minScale||0,this.layer.maxScale||0)}get tilesCoveringView(){if(!this.view.ready||!this.view.featuresTilingScheme||!this.view.state||this.tileInfo==null)return[];if(!this._scaleEnabled)return[];const{spans:t,lodInfo:s}=this.view.featuresTilingScheme.getTileCoverage(this.view.state,0),{level:a}=s,i=[];for(const{row:r,colFrom:l,colTo:h}of t)for(let p=l;p<=h;p++){const u=s.normalizeCol(p),y=new V(null,a,r,u);this.tileInfo.updateTileInfo(y),i.push(y)}return i}get tileInfo(){var t;return((t=this.view.featuresTilingScheme)==null?void 0:t.tileInfo)??null}get tileSize(){return this.tileInfo!=null?this.tileInfo.size[0]:256}constructor(t){super(t),this.pointOfInterest=null}initialize(){this.addHandles(v(()=>{var t,s;return(s=(t=this.view)==null?void 0:t.state)==null?void 0:s.viewpoint},()=>this.notifyChange("tilesCoveringView"),q))}};n([o({readOnly:!0})],f.prototype,"tiles",null),n([o({readOnly:!0})],f.prototype,"_scaleEnabled",null),n([o({readOnly:!0})],f.prototype,"tilesCoveringView",null),n([o({readOnly:!0})],f.prototype,"tileInfo",null),n([o({readOnly:!0})],f.prototype,"tileSize",null),n([o({constructOnly:!0})],f.prototype,"view",void 0),n([o({constructOnly:!0})],f.prototype,"layer",void 0),n([o()],f.prototype,"pointOfInterest",void 0),f=n([b("esri.views.interactive.snapping.featureSources.featureServiceSource.FeatureServiceTiles2D")],f);var x;(function(e){e[e.INVISIBLE=0]="INVISIBLE",e[e.VISIBLE_WHEN_EXTENDED=1]="VISIBLE_WHEN_EXTENDED",e[e.VISIBLE_ON_SURFACE=2]="VISIBLE_ON_SURFACE"})(x||(x={}));let w=class extends H{get tiles(){const e=this.tilesCoveringView,t=this._effectivePointOfInterest;if(t!=null){const s=e.map(a=>M(t,a));for(let a=1;a<s.length;a++)if(s[a-1]>s[a])return e.sort((i,r)=>M(t,i)-M(t,r)),e.slice()}return e}get tilesCoveringView(){var e,t;return this._filterTiles((t=(e=this.view.featureTiles)==null?void 0:e.tiles)==null?void 0:t.toArray()).map(Ne)}get tileInfo(){var e;return((e=this.view.featureTiles)==null?void 0:e.tilingScheme.toTileInfo())??null}get tileSize(){var e;return((e=this.view.featureTiles)==null?void 0:e.tileSize)??256}get _effectivePointOfInterest(){var t;const e=this.pointOfInterest;return e??((t=this.view.pointsOfInterest)==null?void 0:t.focus.location)}constructor(e){super(e),this.pointOfInterest=null}initialize(){this.addHandles(v(()=>this.view.featureTiles,e=>{this.removeHandles(B),e&&this.addHandles(e.addClient(),B)},I))}_filterTiles(e){return e==null?[]:e.filter(t=>Math.abs(t.measures.screenRect[3]-t.measures.screenRect[1])>ze&&t.measures.visibility===x.VISIBLE_ON_SURFACE)}};function Ne({lij:[e,t,s],extent:a}){return new V(`${e}/${t}/${s}`,e,t,s,a)}n([o({readOnly:!0})],w.prototype,"tiles",null),n([o({readOnly:!0})],w.prototype,"tilesCoveringView",null),n([o({readOnly:!0})],w.prototype,"tileInfo",null),n([o({readOnly:!0})],w.prototype,"tileSize",null),n([o({constructOnly:!0})],w.prototype,"view",void 0),n([o()],w.prototype,"pointOfInterest",void 0),n([o()],w.prototype,"_effectivePointOfInterest",null),w=n([b("esri.views.interactive.snapping.featureSources.featureServiceSource.FeatureServiceTiles3D")],w);const ze=50,B="feature-tiles",xe=[[0,179,255],[117,62,128],[0,104,255],[215,189,166],[32,0,193],[98,162,206],[102,112,129],[52,125,0],[142,118,246],[138,83,0],[92,122,255],[122,55,83],[0,142,255],[81,40,179],[0,200,244],[13,24,127],[0,170,147],[19,58,241],[22,44,35]];let O=class extends H{constructor(e){super(e),this.updating=!1,this.enablePolygons=!0,this.enableLabels=!0,this._polygons=new Map,this._labels=new Map,this._enabled=!0}initialize(){this._symbols=xe.map(e=>new K({color:[e[0],e[1],e[2],.6],outline:{color:"black",width:1}})),this.update()}destroy(){this._enabled=!1,this.clear()}get enabled(){return this._enabled}set enabled(e){this._enabled!==e&&(this._enabled=e,this.update())}update(){if(!this._enabled)return void this.clear();const e=r=>{if(r.label!=null)return r.label;let l=r.lij.toString();return r.loadPriority!=null&&(l+=` (${r.loadPriority})`),l},t=this.getTiles(),s=new Array,a=new Set((this._labels.size,this._labels.keys()));t.forEach((r,l)=>{const h=r.lij.toString();a.delete(h);const p=r.lij[0],u=r.geometry;if(this.enablePolygons&&!this._polygons.has(h)){const y=new A({geometry:u,symbol:this._symbols[p%this._symbols.length]});this._polygons.set(h,y),s.push(y)}if(this.enableLabels){const y=e(r),T=l/(t.length-1),k=j(0,200,T),E=j(20,6,T)/.75,F=r.loadPriority!=null&&r.loadPriority>=t.length,$=new z([k,F?0:k,F?0:k]),C=this.view.type==="3d"?()=>new Y({verticalOffset:new ee({screenLength:40/.75}),callout:new te({color:new z("white"),border:new ie({color:new z("black")})}),symbolLayers:new se([new ne({text:y,halo:{color:"white",size:1/.75},material:{color:$},size:E})])}):()=>new ae({text:y,haloColor:"white",haloSize:1/.75,color:$,size:E}),S=this._labels.get(h);if(S){const d=C();S.symbol!=null&&JSON.stringify(d)===JSON.stringify(S.symbol)||(S.symbol=d)}else{const d=new A({geometry:u.extent.center,symbol:C()});this._labels.set(h,d),s.push(d)}}});const i=new Array;a.forEach(r=>{const l=this._polygons.get(r);l!=null&&(i.push(l),this._polygons.delete(r));const h=this._labels.get(r);h!=null&&(i.push(h),this._labels.delete(r))}),this.view.graphics.removeMany(i),this.view.graphics.addMany(s)}clear(){this.view.graphics.removeMany(Array.from(this._polygons.values())),this.view.graphics.removeMany(Array.from(this._labels.values())),this._polygons.clear(),this._labels.clear()}};n([o({constructOnly:!0})],O.prototype,"view",void 0),n([o({readOnly:!0})],O.prototype,"updating",void 0),n([o()],O.prototype,"enabled",null),O=n([b("esri.views.support.TileTreeDebugger")],O);let N=class extends O{constructor(e){super(e)}initialize(){const e=setInterval(()=>this._fetchDebugInfo(),2e3);this.addHandles(re(()=>clearInterval(e)))}getTiles(){if(!this._debugInfo)return[];const e=new Map,t=new Map;this._debugInfo.storedTiles.forEach(i=>{e.set(i.data.id,i.featureCount)}),this._debugInfo.pendingTiles.forEach(i=>{e.set(i.data.id,i.featureCount),t.set(i.data.id,i.state)});const s=i=>{const r=t.get(i),l=e.get(i)??"?";return r?`${r}:${l}
${i}`:`store:${l}
${i}`},a=new Map;return this._debugInfo.storedTiles.forEach(i=>{a.set(i.data.id,i.data)}),this._debugInfo.pendingTiles.forEach(i=>{a.set(i.data.id,i.data)}),Array.from(a.values()).map(i=>({lij:[i.level,i.row,i.col],geometry:oe.fromExtent(le(i.extent,this.view.spatialReference)),label:s(i.id)}))}_fetchDebugInfo(){this.handle.getDebugInfo(null).then(e=>{this._debugInfo=e,this.update()})}};n([o({constructOnly:!0})],N.prototype,"handle",void 0),N=n([b("esri.views.interactive.snapping.featureSources.WorkerTileTreeDebugger")],N);let g=class extends H{get updating(){return this._updatingHandles.updating||this._workerHandleUpdating}constructor(e){super(e),this._updatingHandles=new Z,this._suspendController=null,this.schedule=null,this.hasZ=!1,this.elevationAlignPointsInFeatures=async t=>{const s=[];for(const{points:a}of t.pointsInFeatures)for(const{z:i}of a)s.push(i);return{elevations:s,drapedObjectIds:new Set,failedObjectIds:new Set}},this.queryForSymbologySnapping=async()=>({candidates:[],sourceCandidateIndices:[]}),this.availability=0,this._workerHandleUpdating=!0,this._editId=0,this.updateOutFields=de(async(t,s)=>{await this._updatingHandles.addPromise(this._workerHandle.invokeMethod("updateOutFields",[...t],s)),this._updatingHandles.addPromise(this._workerHandle.invokeMethod("whenNotUpdating",{},s))})}destroy(){this._suspendController=ue(this._suspendController),this._workerHandle.destroy(),this._updatingHandles.destroy()}initialize(){this._workerHandle=new Ve(this.schedule,{alignElevation:async(e,{signal:t})=>({result:await this.elevationAlignPointsInFeatures(e.query,t)}),getSymbologyCandidates:async(e,{signal:t})=>({result:await this.queryForSymbologySnapping(e,t)})}),this.addHandles([this._workerHandle.on("notify-updating",({updating:e})=>this._workerHandleUpdating=e),this._workerHandle.on("notify-availability",({availability:e})=>this._set("availability",e))])}async setup(e,t){var i;const s=this._serviceInfoFromLayer(e.layer);if(s==null)return;const a={configuration:this._convertConfiguration(e.configuration),serviceInfo:s,spatialReference:e.spatialReference.toJSON(),hasZ:this.hasZ,elevationInfo:(i=e.layer.elevationInfo)==null?void 0:i.toJSON()};await this._updatingHandles.addPromise(this._workerHandle.invokeMethod("setup",a,t)),this._updatingHandles.addPromise(this._workerHandle.invokeMethod("whenNotUpdating",{},t))}async configure(e,t){const s=this._convertConfiguration(e);await this._updatingHandles.addPromise(this._workerHandle.invokeMethod("configure",s,t)),this._updatingHandles.addPromise(this._workerHandle.invokeMethod("whenNotUpdating",{},t))}async refresh(e){await this._updatingHandles.addPromise(this._workerHandle.invokeMethod("refresh",{},e)),this._updatingHandles.addPromise(this._workerHandle.invokeMethod("whenNotUpdating",{},e))}async fetchCandidates(e,t){const{point:s,filter:a,coordinateHelper:i}=e,r={...e,point:he(s[0],s[1],s[2],i.spatialReference.toJSON()),filter:a==null?void 0:a.toJSON()};return this._workerHandle.invoke(r,t)}async updateTiles(e,t){const s={tiles:e.tiles,tileInfo:e.tileInfo!=null?e.tileInfo.toJSON():null,tileSize:e.tileSize};await this._updatingHandles.addPromise(this._workerHandle.invokeMethod("updateTiles",s,t)),this._updatingHandles.addPromise(this._workerHandle.invokeMethod("whenNotUpdating",{},t))}async applyEdits(e,t){var l,h,p;const s=this._editId++,a={id:s};await this._updatingHandles.addPromise(this._workerHandle.invokeMethod("beginApplyEdits",a,t));const i=await this._updatingHandles.addPromise(pe(e.result,t)),r={id:s,edits:{addedFeatures:((l=i.addedFeatures)==null?void 0:l.map(({objectId:u})=>u).filter(U))??[],deletedFeatures:((h=i.deletedFeatures)==null?void 0:h.map(({objectId:u,globalId:y})=>({objectId:u,globalId:y})))??[],updatedFeatures:((p=i.updatedFeatures)==null?void 0:p.map(({objectId:u})=>u).filter(U))??[]}};await this._updatingHandles.addPromise(this._workerHandle.invokeMethod("endApplyEdits",r,t)),this._updatingHandles.addPromise(this._workerHandle.invokeMethod("whenNotUpdating",{},t))}getDebugInfo(e){return this._workerHandle.invokeMethod("getDebugInfo",{},e)}async notifyElevationSourceChange(){await this._workerHandle.invokeMethod("notifyElevationSourceChange",{})}async notifySymbologyChange(){await this._workerHandle.invokeMethod("notifySymbologyChange",{})}async setSymbologySnappingSupported(e){await this._workerHandle.invokeMethod("setSymbologySnappingSupported",e)}async setSuspended(e){var t;(t=this._suspendController)==null||t.abort(),this._suspendController=new AbortController,await this._workerHandle.invokeMethod("setSuspended",e,this._suspendController.signal)}_convertConfiguration(e){return{filter:e.filter!=null?e.filter.toJSON():null,customParameters:e.customParameters,viewType:e.viewType}}_serviceInfoFromLayer(e){var t,s;return e.geometryType==="multipatch"||e.geometryType==="mesh"?null:{url:((t=e.parsedUrl)==null?void 0:t.path)??"",fieldsIndex:e.fieldsIndex.toJSON(),geometryType:ce.toJSON(e.geometryType),capabilities:e.capabilities,objectIdField:e.objectIdField,globalIdField:e.globalIdField,spatialReference:e.spatialReference.toJSON(),timeInfo:(s=e.timeInfo)==null?void 0:s.toJSON()}}};n([o({constructOnly:!0})],g.prototype,"schedule",void 0),n([o({constructOnly:!0})],g.prototype,"hasZ",void 0),n([o({constructOnly:!0})],g.prototype,"elevationAlignPointsInFeatures",void 0),n([o({constructOnly:!0})],g.prototype,"queryForSymbologySnapping",void 0),n([o({readOnly:!0})],g.prototype,"updating",null),n([o({readOnly:!0})],g.prototype,"availability",void 0),n([o()],g.prototype,"_workerHandleUpdating",void 0),g=n([b("esri.views.interactive.snapping.featureSources.featureServiceSource.FeatureServiceSnappingSourceWorkerHandle")],g);class Ve extends Pe{constructor(t,s){super("FeatureServiceSnappingSourceWorker","fetchCandidates",{},t,{strategy:"dedicated",client:s})}}let m=class extends H{get tiles(){return[new V("0/0/0",0,0,0,ye(-1e8,-1e8,1e8,1e8))]}get tileInfo(){return new ge({origin:new fe({x:-1e8,y:1e8,spatialReference:this.layer.spatialReference}),size:[512,512],lods:[new _e({level:0,scale:1,resolution:390625})],spatialReference:this.layer.spatialReference})}get tileSize(){return this.tileInfo.size[0]}constructor(e){super(e),this.pointOfInterest=null}};n([o({readOnly:!0})],m.prototype,"tiles",null),n([o({readOnly:!0})],m.prototype,"tileInfo",null),n([o({readOnly:!0})],m.prototype,"tileSize",null),n([o({constructOnly:!0})],m.prototype,"layer",void 0),n([o()],m.prototype,"pointOfInterest",void 0),m=n([b("esri.views.interactive.snapping.featureSources.featureServiceSource.FeatureServiceTilesSimple")],m);let c=class extends H{get _updateTilesParameters(){return{tiles:this._tilesOfInterest.tiles,tileInfo:this._tilesOfInterest.tileInfo,tileSize:this._tilesOfInterest.tileSize}}get _layerView(){var e;return(e=this.view)==null?void 0:e.allLayerViews.find(t=>t.layer===this._layer)}get _isSuspended(){var e;return we(this._layer)&&!this._layer.sublayers.find(t=>t.visible)?!0:!!this.view&&(((e=this._layerView)==null?void 0:e.suspended)!==!1||!this.layerSource.enabled)}get updating(){var e;return((e=this._workerHandle)==null?void 0:e.updating)||this._updatingHandles.updating}get _outFields(){var y,T,k,E,F,$,C,S;const{view:e,_layerView:t,layerSource:s}=this,{layer:a}=s,{fieldsIndex:i,timeInfo:r,floorInfo:l,subtypeField:h}=a,p=t&&"filter"in t?t.filter:null,u=p!=null&&p.where&&p.where!=="1=1"?this._getOrLoadWhereFields(p.where,i):[];if(p!=null&&p.timeExtent&&r){const{startField:d,endField:P}=r,R=((y=i.get(d))==null?void 0:y.name)??d,L=((T=i.get(P))==null?void 0:T.name)??P;R&&u.push(R),L&&u.push(L)}if(e!=null&&e.map&&ve(e.map)&&((k=e.map.utilityNetworks)!=null&&k.find(d=>d.isUtilityLayer(a)))){const d=(E=a.fieldsIndex.get("assetGroup"))==null?void 0:E.name,P=(F=a.fieldsIndex.get("assetType"))==null?void 0:F.name;d&&P&&(u.push(d),u.push(P))}if(a&&(l!=null&&l.floorField)&&(($=e==null?void 0:e.floors)!=null&&$.length)){const d=((C=i.get(l.floorField))==null?void 0:C.name)??l.floorField;d&&u.push(d)}if(h){const d=((S=i.get(h))==null?void 0:S.name)??h;d&&u.push(d)}return new Set(u)}get configuration(){const{view:e}=this,t=e!=null?e.type:"2d";return{filter:this._layer.createQuery(),customParameters:this._layer.customParameters,viewType:t}}get availability(){var e;return((e=this._workerHandle)==null?void 0:e.availability)??0}get _layer(){return this.layerSource.layer}constructor(e){super(e),this._updatingHandles=new Z,this._workerHandle=null,this._debug=null,this._memoizedMakeGetGroundElevation=He($e)}initialize(){let e;const t=this.view;if(t!=null)switch(t.type){case"2d":this._tilesOfInterest=new f({view:t,layer:this._layer}),e=this._workerHandle=new g;break;case"3d":{const{resourceController:s}=t,a=this._layer;this._tilesOfInterest=new w({view:t}),e=this._workerHandle=new g({schedule:i=>s.immediate.schedule(i),hasZ:this._layer.hasZ&&(this._layer.returnZ??!0),elevationAlignPointsInFeatures:async(i,r)=>{const l=await t.whenLayerView(a);return D(r),l.elevationAlignPointsInFeatures(i,r)},queryForSymbologySnapping:async(i,r)=>{const l=await t.whenLayerView(a);return D(r),l.queryForSymbologySnapping(i,r)}}),this.addHandles([t.elevationProvider.on("elevation-change",({context:i})=>{const{elevationInfo:r}=a;me(i,r)&&_(e.notifyElevationSourceChange())}),v(()=>a.elevationInfo,()=>_(e.notifyElevationSourceChange()),I),v(()=>{var i,r;return(r=(i=this._layerView)==null?void 0:i.processor)==null?void 0:r.renderer},()=>_(e.notifySymbologyChange()),I),v(()=>{var i;return((i=this._layerView)==null?void 0:i.symbologySnappingSupported)??!1},i=>_(e.setSymbologySnappingSupported(i)),I),Se(()=>{var i;return(i=this._layerView)==null?void 0:i.layer},["edits","apply-edits","graphic-update"],()=>e.notifySymbologyChange())]);break}}else this._tilesOfInterest=new m({layer:this._layer}),e=this._workerHandle=new g;this.addHandles([W(e)]),_(e.setup({layer:this._layer,spatialReference:this.spatialReference,configuration:this.configuration},null)),this._updatingHandles.add(()=>this._updateTilesParameters,()=>_(e.updateTiles(this._updateTilesParameters,null)),I),this.addHandles([v(()=>this.configuration,s=>_(e.configure(s,null)),q),v(()=>this._outFields,s=>_(e.updateOutFields(s)),I),v(()=>this._isSuspended,s=>_(e.setSuspended(s)),Ie)]),t!=null&&this.addHandles(v(()=>be.FEATURE_SERVICE_SNAPPING_SOURCE_TILE_TREE_SHOW_TILES,s=>{s&&!this._debug?(this._debug=new N({view:t,handle:e}),this.addHandles(W(this._debug),"debug")):!s&&this._debug&&this.removeHandles("debug")},I)),this.addHandles(this.layerSource.layer.on("apply-edits",s=>{_(e.applyEdits(s,null))}))}destroy(){this._updatingHandles.destroy()}refresh(){var e;(e=this._workerHandle)==null||e.refresh(null)}async fetchCandidates(e,t){const{coordinateHelper:s,point:a}=e;this._tilesOfInterest.pointOfInterest=s.arrayToPoint(a);const i=this._memoizedMakeGetGroundElevation(this.view,s.spatialReference);return(await this._workerHandle.fetchCandidates({...e},t)).candidates.map(r=>Ce(r,i))}getDebugInfo(e){return this._workerHandle.getDebugInfo(e)}_getOrLoadWhereFields(e,t){const{_whereModule:s}=this;if(!this._loadWhereModuleTask&&!s){const a=ke(async()=>{const i=await Oe(()=>import("./WhereClause-apv-PO0T.js").then(r=>r.W),__vite__mapDeps([0,1,2,3,4]),import.meta.url);return this._whereModule=i.WhereClause,this._whereModule});return this._loadWhereModuleTask=a,this._updatingHandles.addPromise(a.promise),[]}if(!s)return[];try{return s.create(e,t).fieldNames}catch{return[]}}};n([o({constructOnly:!0})],c.prototype,"spatialReference",void 0),n([o({constructOnly:!0})],c.prototype,"layerSource",void 0),n([o({constructOnly:!0})],c.prototype,"view",void 0),n([o()],c.prototype,"_tilesOfInterest",void 0),n([o({readOnly:!0})],c.prototype,"_updateTilesParameters",null),n([o()],c.prototype,"_layerView",null),n([o()],c.prototype,"_isSuspended",null),n([o({readOnly:!0})],c.prototype,"updating",null),n([o()],c.prototype,"_outFields",null),n([o({readOnly:!0})],c.prototype,"configuration",null),n([o({readOnly:!0})],c.prototype,"availability",null),n([o()],c.prototype,"_loadWhereModuleTask",void 0),n([o()],c.prototype,"_whereModule",void 0),c=n([b("esri.views.interactive.snapping.featureSources.FeatureServiceSnappingSource")],c);export{c as FeatureServiceSnappingSource};
function __vite__mapDeps(indexes) {
  if (!__vite__mapDeps.viteFileDeps) {
    __vite__mapDeps.viteFileDeps = ["./WhereClause-apv-PO0T.js","./TimeOnly-WOAkj6tI.js","./index-eSY5-lt-.js","./index-5m03CWEM.css","./UnknownTimeZone-iVS1S_Kf.js"]
  }
  return indexes.map((i) => __vite__mapDeps.viteFileDeps[i])
}