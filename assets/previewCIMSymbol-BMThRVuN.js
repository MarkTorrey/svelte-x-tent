import{av as w,dE as M}from"./index-BdDnxAOC.js";import{e as g}from"./CIMSymbolHelper-vq9rAQVS.js";import{CIMSymbolRasterizer as $}from"./CIMSymbolRasterizer-CC-LN4aZ.js";import{y as j}from"./OverrideHelper-cJgBvMlU.js";import{V as G}from"./utils-DpS7XCOa.js";import{t as b,l as O}from"./symbolUtils-BUs8Wbgp.js";import"./BidiEngine-DNnuvc1i.js";import"./fontUtils-CiOfLTjw.js";import"./OptimizedGeometry-BF8iz5FO.js";import"./GeometryUtils-gjMcVHTd.js";import"./enums-CmIX1y88.js";import"./Rect-CUzevAry.js";import"./BoundingBox-Tk_OBeCC.js";import"./defaults-BX3STjdr.js";import"./defaultsJSON-GKolV7NZ.js";import"./CIMResourceManager-DiZ9873h.js";import"./colorUtils-CXI_GYiL.js";import"./quantizationUtils-BIIdN1xY.js";import"./ColorStop-D1flJukn.js";import"./utils-Dq0Bk0UU.js";import"./cimSymbolUtils-Cz7fBoYZ.js";import"./LRUCache-CSFO1iZh.js";import"./utils-DmAx5TEG.js";import"./jsonUtils-B03p0wkk.js";import"./UniqueValueRenderer-BWPFapkt.js";import"./colorRamps-feXPP0Fe.js";import"./sizeVariableUtils-Cmcuvw-4.js";import"./visualVariableUtils-CGgEbm3F.js";import"./jsonUtils-DM4hoWoB.js";import"./styleUtils-D8VmJ7nq.js";import"./FieldsIndex-DdufUIvd.js";import"./UnknownTimeZone-CDnwrDVp.js";import"./heatmapUtils-BQROikav.js";import"./webStyleSymbolUtils-C-w781HU.js";import"./devEnvironmentUtils-CnNDiFMM.js";const u=new $(null),c=w(b.size),S=w(b.maxSize),C=w(b.lineWidth),R=1;async function V(o,e,a){const i=e==null?void 0:e.size;let t=i!=null&&typeof i=="object"&&"width"in i?i.width:i,l=i!=null&&typeof i=="object"&&"height"in i?i.height:i;if(t==null||l==null)if(a==="esriGeometryPolygon")t=c,l=c;else{const r=await E(o,e,a);r&&(t=r.width,l=r.height),a==="esriGeometryPolyline"&&(t=C),t=t!=null&&isFinite(t)?Math.min(t,S):c,l=l!=null&&isFinite(l)?Math.max(Math.min(l,S),R):c}return e.style==="legend"&&a==="esriGeometryPolyline"&&(t=C),{width:t,height:l}}async function E(o,e,a){const{feature:i,fieldMap:t,viewParams:l}=e.cimOptions||e,r=await j.resolveSymbolOverrides(o.data,i,null,t,a,null,l);if(!r)return null;(o=o.clone()).data={type:"CIMSymbolReference",symbol:r},o.data.primitiveOverrides=void 0;const n=[];return g.fetchResources(r,u.resourceManager,n),g.fetchFonts(r,u.resourceManager,n),n.length>0&&await Promise.all(n),g.getEnvelope(r,null,u.resourceManager)}async function we(o,e={}){var v;const{node:a,opacity:i,symbolConfig:t}=e,l=t!=null&&typeof t=="object"&&"isSquareFill"in t&&t.isSquareFill,r=e.cimOptions||e,n=r.geometryType||G((v=o==null?void 0:o.data)==null?void 0:v.symbol),f=await V(o,e,n),{feature:P,fieldMap:I}=r,L=l||n!=="esriGeometryPolygon"?"preview":"legend",y=await u.rasterizeCIMSymbolAsync(o,P,f,L,I,n,null,r.viewParams,r.allowScalingUp);if(!y)return null;const{width:x,height:z}=y,p=document.createElement("canvas");p.width=x,p.height=z,p.getContext("2d").putImageData(y,0,0);const h=M(f.width),d=M(f.height),m=new Image(h,d);m.src=p.toDataURL(),m.ariaLabel=e.ariaLabel??null,m.alt=e.ariaLabel??"",i!=null&&(m.style.opacity=`${i}`);let s=m;if(e.effectView!=null){const F={shape:{type:"image",x:0,y:0,width:h,height:d,src:m.src},fill:null,stroke:null,offset:[0,0]};s=O([[F]],[h,d],{effectView:e.effectView,ariaLabel:e.ariaLabel})}return a&&s&&a.appendChild(s),s}export{we as previewCIMSymbol};
