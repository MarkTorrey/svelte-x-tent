import{gc as w,gd as T,$ as f,bb as _,A as b,cu as u,gn as D,U as g,bK as S,el as L,ej as M,em as v,aq as A,V as r,W as l,bD as E,bF as N,X as k,eq as R,er as I,gg as C}from"./index-Cek7aMWl.js";import{S as G}from"./MultiOriginJSONSupport-BlAwjy_L.js";import{a as c,M as $,T as O,E as U}from"./KnowledgeGraphSublayer-BGK1FlGM.js";import{l as j}from"./ArcGISService-CcXrOqVK.js";import{e as z}from"./CustomParametersMixin-DLUUPWS3.js";import{b as F}from"./OperationalLayer-B-J5coPH.js";import{j as K}from"./PortalLayer-B7KsXAi1.js";import{f as P}from"./RefreshableLayer-CeoHeJiI.js";import{p as x}from"./commonProperties-DbjJOfHD.js";import{R as V}from"./knowledgeGraphService-UAbgfkXv.js";import"./UniqueValueRenderer-DoQjGRE5.js";import"./ColorStop-CqMXhorb.js";import"./colorRamps-4yJNyWKx.js";import"./sizeVariableUtils-Cmcuvw-4.js";import"./visualVariableUtils-Cdb7Kq7r.js";import"./jsonUtils-C2l4B_cE.js";import"./defaults-fOuW8gwA.js";import"./defaultsJSON-GKolV7NZ.js";import"./styleUtils-Dv2EsbEO.js";import"./jsonUtils-DGzEHX8a.js";import"./LRUCache-pAqnhOsq.js";import"./Version-DJsGRXWf.js";import"./FieldsIndex-Bjg3eA_S.js";import"./UnknownTimeZone-Cjv2gi-C.js";import"./OverrideHelper-ClkM4CZ1.js";import"./colorUtils-BlCLzs4t.js";import"./utils-BE8joJvK.js";import"./quantizationUtils-DeBnMDmu.js";import"./heatmapUtils-NTzr8GZp.js";import"./FeatureStore-CSlCqony.js";import"./featureConversionUtils-DoC7B3A2.js";import"./OptimizedFeature-7juV2tZm.js";import"./OptimizedGeometry-vU5jWBvU.js";import"./OptimizedFeatureSet-Blu9Ckm7.js";import"./BoundsStore-CqIMR90U.js";import"./PooledRBush-MooUbwUC.js";import"./timeSupport-4nmKr68x.js";import"./json-Wa8cmqdu.js";import"./SnappingCandidate-xj0n6h40.js";import"./centroid-DdLmOD72.js";import"./QueryEngine-IKvsTXYb.js";import"./WhereClause-BO6P4l1i.js";import"./TimeOnly-BJnd6TEv.js";import"./QueryEngineCapabilities-CTDe3LlQ.js";import"./utils-XJ1T__tY.js";import"./utils-CGzR1Xtt.js";import"./utils-DP5uPz0P.js";import"./ClassBreaksDefinition-PCWmsrmg.js";import"./clientSideDefaults-CukrBNnE.js";import"./GraphQueryStreaming-D2B98xCR.js";import"./fieldProperties-CRKzdtOw.js";import"./FeatureEffectLayer-B8mIeO1h.js";import"./FeatureEffect-C7S4JiNp.js";import"./FeatureReductionLayer-ChbPfE6a.js";import"./FeatureReductionSelection-C2fvQ0bE.js";import"./featureLayerUtils-ChIFdxrX.js";import"./RelationshipQuery-CWq1d8EN.js";import"./labelingInfo-xEuuUnSV.js";import"./labelUtils-C4iNx9oT.js";import"./MD5-C9MwAd2G.js";import"./OrderedLayer-YkoaksA8.js";import"./OrderByInfo-BunYYZ3s.js";import"./TemporalLayer-Ba9mHalh.js";import"./TimeInfo-DDzm1g7J.js";import"./FeatureSet-ClbNh9OS.js";import"./popupUtils-BYVjdumh.js";import"./portalItemUtils-BCfDAbUL.js";let s=class extends w(T(P(j(F(K(G(z(C)))))))){constructor(e){super(e),this._graphTypeLookup=new Map,this._namedTypesModified=!1,this.dataManager=null,this.definitionSetMap=null,this.knowledgeGraph=null,this.layers=new(f.ofType(c)),this.memberEntityTypes=null,this.memberRelationshipTypes=null,this.operationalLayerType="KnowledgeGraphLayer",this.sublayerIdsCache=new Map,this.tables=new(f.ofType(c)),this.type="knowledge-graph",this.url=null}load(e){return this.addResolvingPromise(this._doLoad(e)),Promise.resolve(this)}async _doLoad(e){try{await this.loadFromPortal({supportedTypes:["Knowledge Graph Layer"]},e)}catch(t){_(t)}await this._fetchMetadata(),await this._initializeLayerProperties(),this.loadLayerAssumingLocalCache()}async _fetchMetadata(){if(!this.url)throw new b("knowledge-graph:missing-url","KnowledgeGraphLayer must be created with a url");const e=await V(this.url);this.knowledgeGraph=e,this._forEachGraphType(t=>{t.name&&this._graphTypeLookup.set(t.name,t)})}async _initializeLayerProperties(){this.originIdOf("inclusionModeDefinition")===u.USER?this._validateInclusionModeDefinition():await this._initializeInclusionModeDefinition(),this._setMemberTypes(),this.dataManager=new $({knowledgeGraph:this.knowledgeGraph,inclusionModeDefinition:this.inclusionModeDefinition})}async _initializeInclusionModeDefinition(){const e=this.definitionSetMap?await O(this.definitionSetMap,!0):{generateAllSublayers:!0,namedTypeDefinitions:new Map};[...this.layers.toArray(),...this.tables.toArray()].forEach(t=>{const i=this._graphTypeLookup.get(t.graphTypeName);i&&!e.namedTypeDefinitions.has(i.name)&&e.namedTypeDefinitions.set(i.name,{useAllData:!0})}),this.setAtOrigin("inclusionModeDefinition",e,D(this.originIdOf("definitionSetMap")))}_validateInclusionModeDefinition(){const{inclusionModeDefinition:e}=this;if(!e)return;const{namedTypeDefinitions:t}=e;if((t==null?void 0:t.size)>0)t.forEach((i,a)=>{const o=this._graphTypeLookup.get(a);if(!o)return g.getLogger(this).warn(`A named type, ${a}, was in the inclusion list that wasn't in the data model and will be removed`),void t.delete(a);o.type!=="relationship"&&o.type!=="entity"&&(g.getLogger(this).warn(`A named type, ${a}, was in the inclusion list that wasn't properly modeled and will be removed`),t.delete(a))});else if(!e.generateAllSublayers)throw new b("knowledge-graph:composite-layer-constructor","If an explicit inclusion definition is defined, at least one namedTypeDefinition must also be defined")}_setMemberTypes(){var o,n;let e=[],t=[];const{inclusionModeDefinition:i}=this,a=i==null?void 0:i.namedTypeDefinitions;!i||i.generateAllSublayers?(e=((o=this.knowledgeGraph.dataModel)==null?void 0:o.entityTypes)??[],t=((n=this.knowledgeGraph.dataModel)==null?void 0:n.relationshipTypes)??[]):a&&a.size>0&&a.forEach((p,h)=>{const d=this._graphTypeLookup.get(h);switch(d==null?void 0:d.type){case"relationship":t.push(d);break;case"entity":e.push(d)}}),this.memberEntityTypes=e,this.memberRelationshipTypes=t}_forEachGraphType(e){var t,i;[...((t=this.knowledgeGraph.dataModel)==null?void 0:t.entityTypes)??[],...((i=this.knowledgeGraph.dataModel)==null?void 0:i.relationshipTypes)??[]].forEach(a=>{e(a)})}_refreshNamedTypes(){this._namedTypesModified=!0;for(const e of this.layers)e.emit("refresh",{dataChanged:!0});for(const e of this.tables)e.emit("refresh",{dataChanged:!0})}async _handleNewRecords(e){const t=[];this.dataManager.addToLayer(e);for(const i of e)this.sublayerIdsCache.has(i.typeName)||(this.sublayerIdsCache.set(i.typeName,new Set),t.push(i.typeName)),this.sublayerIdsCache.get(i.typeName).add(i.id);for(const i of t){const a=this._graphTypeLookup.get(i);a&&(this._addSublayer(a).title=i,a.type==="entity"?this.dataManager.entityTypeNames.add(i):this.dataManager.relationshipTypeNames.add(i),this.dataManager.sublayerCaches.set(i,new Map))}this._refreshNamedTypes()}_createSublayers(e,t,i){e.forEach(a=>{const o=this._createSublayer(a);i(o)&&t.push(o),this._updateSublayerCaches(a)})}_addSublayer(e){const t=this._createSublayer(e);return t.geometryType?this.layers.push(t):this.tables.push(t),t}_createSublayer(e){return new c({objectType:e,parentCompositeLayer:this,graphType:e.type,title:e.name})}_updateSublayers(e,t){t.forEach(i=>{i.parentCompositeLayer=this;const a=e.find(o=>o.type===i.graphType&&o.name===i.graphTypeName);a&&(i.objectType=a,i.read({title:a.name},{origin:"service"}),this._updateSublayerCaches(a))})}_updateSublayerCaches(e){const t=this.dataManager.sublayerCaches;t.has(e.name)||t.set(e.name,new Map)}_saveUrlAsNewResource(e,t,i,a){e[t]="<pending>",i.pendingOperations.push(q(this.inclusionModeDefinition).then(o=>{const n=B(a);e[t]=n.itemRelativeUrl,i.toAdd.push({resource:n,content:{type:"blob",blob:o},compress:!1,finish:p=>{this.definitionSetMap=p.url}})}))}_displaysAllRecords(e){for(const[,{useAllData:t}]of e.namedTypeDefinitions)if(!t)return!1;return!0}readDefinitionSetMap(e,t,i){return S(e,i)}writeDefinitionSetMap(e,t,i,a){const o=a==null?void 0:a.portalItem,n=a==null?void 0:a.resources,p=L(a==null?void 0:a.origin);if(!o||!n||p==null)return void(e&&(t[i]=M(e,a)));const{inclusionModeDefinition:h}=this;if(!h||this._displaysAllRecords(h))return void(this.definitionSetMap=null);const d=this.originIdOf("inclusionModeDefinition");if(d===u.USER||this._namedTypesModified||p<d)this._saveUrlAsNewResource(t,i,n,o);else if(p===d&&e){const m=M(e,a);v(m)?this._saveUrlAsNewResource(t,i,n,o):t[i]=m}}set inclusionModeDefinition(e){this.loadStatus!=="loaded"&&this.loadStatus!=="failed"?this._set("inclusionModeDefinition",e):g.getLogger(this).error("#inclusionModeDefinition","inclusionModeDefinition cannot be changed after the layer is loaded.")}loadLayerAssumingLocalCache(){var t,i;const e=[...this.memberEntityTypes,...this.memberRelationshipTypes];this.originIdOf("layers")===u.DEFAULTS?this._createSublayers(e,this.layers,a=>!!a.geometryType):this._updateSublayers(e,this.layers),this.originIdOf("tables")===u.DEFAULTS?this._createSublayers(e,this.tables,a=>!a.geometryType):this._updateSublayers(e,this.tables),(i=(t=this.dataManager.inclusionModeDefinition)==null?void 0:t.namedTypeDefinitions)==null||i.forEach((a,o)=>{var p;const n=A(this.sublayerIdsCache,o,()=>new Set);(p=a.members)==null||p.forEach(h=>{n.add(h.id)})})}async addRecords(e){await this._handleNewRecords(e)}async removeRecords(e){var i,a,o,n,p,h,d,m;const t=[];for(const y of e)((o=(a=(i=this.dataManager.inclusionModeDefinition)==null?void 0:i.namedTypeDefinitions)==null?void 0:a.get(y.typeName))==null?void 0:o.useAllData)===!1&&((d=(h=(p=(n=this.dataManager.inclusionModeDefinition)==null?void 0:n.namedTypeDefinitions)==null?void 0:p.get(y.typeName))==null?void 0:h.members)!=null&&d.has(y.id))&&t.push(y);this.dataManager.removeFromLayer(t);for(const y of t)(m=this.sublayerIdsCache.get(y.typeName))==null||m.delete(y.id);return this._refreshNamedTypes(),t}};r([l()],s.prototype,"dataManager",void 0),r([l({json:{write:{ignoreOrigin:!0,writerEnsuresNonNull:!0}}})],s.prototype,"definitionSetMap",void 0),r([E("definitionSetMap")],s.prototype,"readDefinitionSetMap",null),r([N("definitionSetMap")],s.prototype,"writeDefinitionSetMap",null),r([l()],s.prototype,"inclusionModeDefinition",null),r([l()],s.prototype,"knowledgeGraph",void 0),r([l({type:f.ofType(c),json:{write:{ignoreOrigin:!0}}})],s.prototype,"layers",void 0),r([l()],s.prototype,"memberEntityTypes",void 0),r([l()],s.prototype,"memberRelationshipTypes",void 0),r([l({type:["KnowledgeGraphLayer"]})],s.prototype,"operationalLayerType",void 0),r([l()],s.prototype,"sublayerIdsCache",void 0),r([l({type:f.ofType(c),json:{write:{ignoreOrigin:!0}}})],s.prototype,"tables",void 0),r([l({json:{read:!1}})],s.prototype,"type",void 0),r([l(x)],s.prototype,"url",void 0),s=r([k("esri.layers.KnowledgeGraphLayer")],s);const rt=s;async function q(e){const t=await U(e);return new Blob([t],{type:"application/x-protobuf"})}function B(e){const t=`definitionSetMap-${R()}.dat`,i=I("knowledgeGraphLayer",t);return e.resourceFromPath(i)}export{rt as default};
