import{l2 as y,l3 as p,l4 as f,l5 as I,a0 as u,l6 as k,l7 as F,av as w,a5 as S,l8 as T,df as C,l9 as L,B as c,ay as U,ax as z,gb as E,aG as P,aH as V,la as W,l0 as h,lb as D,lc as j}from"./index-CaKGzNfV.js";import{S as B,u as G,c as H}from"./defaults-r4nVzw_0.js";import{e as q,i as A}from"./defaultsJSON-GKolV7NZ.js";const J=y.fromSimpleMarkerSymbol(B),K=p.fromSimpleLineSymbol(G),N=f.fromSimpleFillSymbol(H),O=new I({symbolLayers:new u([new k({material:{color:q},edges:new F({size:w(1),color:new S(A)})})])}),Q=new p({symbolLayers:new u([new T({material:{color:new S([0,0,0])},size:w(1)})])}),R=new f({symbolLayers:new u([new k({outline:{color:new S([0,0,0]),size:w(1)}})])});function oe(e){if(e==null)return null;switch(e.type){case"mesh":return O;case"point":case"multipoint":return J;case"polyline":return K;case"polygon":case"extent":return N}return null}const M="#useCIMFallbackSymbology()",i={retainId:!1,ignoreDrivers:!1,hasLabelingContext:!0};function X(e,n=i){var a,g,$,d;if(!e)return{symbol:null};const{retainId:t=i.retainId,ignoreDrivers:o=i.ignoreDrivers,hasLabelingContext:r=i.hasLabelingContext,retainCIM:m=i.retainCIM,cimFallbackEnabled:s=i.cimFallbackEnabled}=n;let l=null;if(C(e)||e instanceof L)l=e.clone();else if(e.type==="cim"){const b=(g=(a=e.data)==null?void 0:a.symbol)==null?void 0:g.type;switch(b){case"CIMPointSymbol":l=m?e.clone():y.fromCIMSymbol(e);break;case"CIMLineSymbol":s&&(l=Q.clone(),($=n==null?void 0:n.logWarning)==null||$.call(n,M,"Unsupported CIM line symbology converted to fallback 3D line symbology"));break;case"CIMPolygonSymbol":s&&(l=R.clone(),(d=n==null?void 0:n.logWarning)==null||d.call(n,M,"Unsupported CIM polygon symbology converted to fallback 3D polygon symbology"))}if(!l)return{error:new c("symbol-conversion:unsupported-cim-symbol",`CIM symbol of type '${b||"unknown"}' is unsupported in 3D`,{symbol:e})}}else if(e instanceof U)l=p.fromSimpleLineSymbol(e);else if(e instanceof z)l=y.fromSimpleMarkerSymbol(e);else if(e instanceof E)l=y.fromPictureMarkerSymbol(e);else if(e instanceof P)l=n.geometryType&&n.geometryType==="mesh"?I.fromSimpleFillSymbol(e):f.fromSimpleFillSymbol(e);else{if(!(e instanceof V))return{error:new c("symbol-conversion:unsupported-2d-symbol",`2D symbol of type '${e.type||e.declaredClass}' is unsupported in 3D`,{symbol:e})};l=r?W.fromTextSymbol(e):y.fromTextSymbol(e)}return t&&l&&l.type!=="cim"&&(l.id=e.id),o&&C(l)&&l.symbolLayers.forEach(b=>b.ignoreDrivers=!0),{symbol:l}}function ne(e,n,t,o){const r=v(e,{},{context:o,isLabelSymbol:!1});r!=null&&(n[t]=r)}function le(e,n,t,o){const r=v(e,{},{context:o,isLabelSymbol:!0});r!=null&&(n[t]=r)}function x(e){return e instanceof D||e instanceof L}function Y(e){return e instanceof D&&(e.type==="polygon-3d"||e.type==="line-3d")}function v(e,n,t){var l;if(e==null)return null;const{context:o,isLabelSymbol:r}=t,m=o==null?void 0:o.origin,s=o==null?void 0:o.messages;if(m==="web-scene"&&!x(e)){const a=X(e,{retainCIM:!0,hasLabelingContext:r});return a.symbol!=null?a.symbol.write(n,o):(s==null||s.push(new c("symbol:unsupported",`Symbols of type '${e.declaredClass}' are not supported in scenes. Use 3D symbology instead when working with WebScene and SceneView`,{symbol:e,context:o,error:a.error})),null)}return h(o==null?void 0:o.layer)&&Y(e)?(s==null||s.push(new c("symbol:unsupported",`Symbols of type '${e.declaredClass}' are not supported on layers of type '${(l=o==null?void 0:o.layer)==null?void 0:l.declaredClass}'.`,{symbol:e,context:o})),null):(m==="web-map"||m==="portal-item"&&!h(o==null?void 0:o.layer))&&x(e)?(s==null||s.push(new c("symbol:unsupported",`Symbols of type '${e.declaredClass}' are not supported in web maps and portal items. Use 2D symbology and CIMSymbol instead when working with MapView`,{symbol:e,context:o})),null):e.write(n,o)}function se(e,n){return j(e,null,n)}export{oe as d,i as g,le as i,ne as l,se as p,X as u};
