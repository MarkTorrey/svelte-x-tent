import{iT as m,iU as b,iV as p,iW as x,$ as f,iX as I,iY as D,ca as u,aA as d,iZ as v,bM as h,i_ as L,A as c,ax as g,aw as F,gf as T,ay as U,az as z,i$ as V,iQ as W,j0 as j,j1 as E}from"./index-Cek7aMWl.js";import{S as P,u as A,c as Q}from"./defaults-fOuW8gwA.js";import{e as X,i as Y}from"./defaultsJSON-GKolV7NZ.js";const Z=m.fromSimpleMarkerSymbol(P),_=b.fromSimpleLineSymbol(A),q=p.fromSimpleFillSymbol(Q),B=new x({symbolLayers:new f([new I({material:{color:X},edges:new D({size:u(1),color:new d(Y)})})])}),G=new b({symbolLayers:new f([new v({material:{color:new d([0,0,0])},size:u(1)})])}),H=new p({symbolLayers:new f([new I({outline:{color:new d([0,0,0]),size:u(1)}})])});function R(e){if(e==null)return null;switch(e.type){case"mesh":return B;case"point":case"multipoint":return Z;case"polyline":return _;case"polygon":case"extent":return q}return null}const t={retainId:!1,ignoreDrivers:!1,hasLabelingContext:!0};function J(e,n=t){var w,S,$,C;if(!e)return{symbol:null};const{retainId:i=t.retainId,ignoreDrivers:s=t.ignoreDrivers,hasLabelingContext:l=t.hasLabelingContext,retainCIM:a=t.retainCIM,cimFallbackEnabled:r=t.cimFallbackEnabled}=n;let o=null;if(h(e)||e instanceof L)o=e.clone();else if(e.type==="cim"){const y=(S=(w=e.data)==null?void 0:w.symbol)==null?void 0:S.type;switch(y){case"CIMPointSymbol":o=a?e.clone():m.fromCIMSymbol(e);break;case"CIMLineSymbol":r&&(o=G.clone(),($=n==null?void 0:n.logWarning)==null||$.call(n,"Unsupported CIM line symbology converted to fallback 3D line symbology"));break;case"CIMPolygonSymbol":r&&(o=H.clone(),(C=n==null?void 0:n.logWarning)==null||C.call(n,"Unsupported CIM polygon symbology converted to fallback 3D polygon symbology"))}if(!o)return{error:new c("symbol-conversion:unsupported-cim-symbol",`CIM symbol of type '${y||"unknown"}' is unsupported in 3D`,{symbol:e})}}else if(e instanceof g)o=b.fromSimpleLineSymbol(e);else if(e instanceof F)o=m.fromSimpleMarkerSymbol(e);else if(e instanceof T)o=m.fromPictureMarkerSymbol(e);else if(e instanceof U)o=n.geometryType&&n.geometryType==="mesh"?x.fromSimpleFillSymbol(e):p.fromSimpleFillSymbol(e);else{if(!(e instanceof z))return{error:new c("symbol-conversion:unsupported-2d-symbol",`2D symbol of type '${e.type||e.declaredClass}' is unsupported in 3D`,{symbol:e})};o=l?V.fromTextSymbol(e):m.fromTextSymbol(e)}return i&&o&&o.type!=="cim"&&(o.id=e.id),s&&h(o)&&o.symbolLayers.forEach(y=>y.ignoreDrivers=!0),{symbol:o}}function ee(e,n,i,s){const l=k(e,{},{context:s,isLabelSymbol:!1});l!=null&&(n[i]=l)}function ne(e,n,i,s){const l=k(e,{},{context:s,isLabelSymbol:!0});l!=null&&(n[i]=l)}function M(e){return e instanceof j||e instanceof L}function k(e,n,i){if(e==null)return null;const{context:s,isLabelSymbol:l}=i,a=s==null?void 0:s.origin,r=s==null?void 0:s.messages;if(a==="web-scene"&&!M(e)){const o=J(e,{retainCIM:!0,hasLabelingContext:l});return o.symbol!=null?o.symbol.write(n,s):(r==null||r.push(new c("symbol:unsupported",`Symbols of type '${e.declaredClass}' are not supported in scenes. Use 3D symbology instead when working with WebScene and SceneView`,{symbol:e,context:s,error:o.error})),null)}return(a==="web-map"||a==="portal-item"&&!W(s==null?void 0:s.layer))&&M(e)?(r==null||r.push(new c("symbol:unsupported",`Symbols of type '${e.declaredClass}' are not supported in web maps and portal items. Use 2D symbology and CIMSymbol instead when working with MapView`,{symbol:e,context:s})),null):e.write(n,s)}function oe(e,n){return E(e,null,n)}export{t as S,oe as b,R as d,J as g,ne as i,ee as l};
