import{fi as l,hK as s,hL as f,hm as w,hv as g,b3 as m,bm as b}from"./index-eSY5-lt-.js";const t=(n=>n)(["operational-layers","basemap","ground"]);function v(n){if(!n)return n;const{start:e,end:i}=n;return new l({start:e!=null?s(e,-e.getTimezoneOffset(),"minutes"):e,end:i!=null?s(i,-i.getTimezoneOffset(),"minutes"):i})}function j(n){if(!n)return n;const{start:e,end:i}=n;return new l({start:e!=null?s(e,e.getTimezoneOffset(),"minutes"):e,end:i!=null?s(i,i.getTimezoneOffset(),"minutes"):i})}const I={type:Boolean,value:!0,json:{origins:{service:{read:!1,write:!1},"web-map":{read:!1,write:!1}},name:"screenSizePerspective",write:{enabled:!0,layerContainerTypes:t}}},h={type:Boolean,value:!0,json:{name:"disablePopup",read:{reader:(n,e)=>!e.disablePopup},write:{enabled:!0,writer(n,e,i){e[i]=!n}}}},O={type:Boolean,value:!0,nonNullable:!0,json:{name:"showLabels",write:{enabled:!0,layerContainerTypes:t}}},C={type:String,json:{origins:{"portal-item":{write:!1}},write:{isRequired:!0,ignoreOrigin:!0,writer:w}}},D={type:Boolean,value:!0,nonNullable:!0,json:{origins:{service:{read:{enabled:!1}}},name:"showLegend",write:{enabled:!0,layerContainerTypes:t}}},S={value:null,type:g,json:{origins:{service:{name:"elevationInfo",write:!0}},name:"layerDefinition.elevationInfo",write:{enabled:!0,layerContainerTypes:t}}};function N(n){return{type:n,readOnly:!0,json:{origins:{service:{read:!0}},read:!1}}}const u={write:{enabled:!0,layerContainerTypes:t},read:!0},c={type:Number,json:{origins:{"web-document":u,"portal-item":{write:!0}}}},x={...c,json:{...c.json,origins:{"web-document":{...u,write:{enabled:!0,layerContainerTypes:t,target:{opacity:{type:Number},"layerDefinition.drawingInfo.transparency":{type:Number}}}}},read:{source:["layerDefinition.drawingInfo.transparency","drawingInfo.transparency"],reader:(n,e,i)=>{var a;return i&&i.origin!=="service"||!e.drawingInfo||e.drawingInfo.transparency===void 0?(a=e.layerDefinition)!=null&&a.drawingInfo&&e.layerDefinition.drawingInfo.transparency!==void 0?f(e.layerDefinition.drawingInfo.transparency):void 0:f(e.drawingInfo.transparency)}}}},z={type:l,readOnly:!0,get(){var d,p;if(!((d=this.layer)!=null&&d.timeInfo))return null;const{datesInUnknownTimezone:n,timeOffset:e,useViewTime:i}=this.layer,a=(p=this.view)==null?void 0:p.timeExtent;let o=this.layer.timeExtent;n&&(o=j(o));let r=i?a&&o?a.intersection(o):a||o:o;if(!r||r.isEmpty||r.isAllTime)return r;e&&(r=r.offset(-e.value,e.unit)),n&&(r=v(r));const y=this._get("timeExtent");return r.equals(y)?y:r}},R={type:m,readOnly:!0,json:{origins:{service:{read:{source:["fullExtent","spatialReference"],reader:(n,e)=>{const i=m.fromJSON(n);return e.spatialReference!=null&&typeof e.spatialReference=="object"&&(i.spatialReference=b.fromJSON(e.spatialReference)),i}}}},read:!1}},E={type:String,json:{origins:{service:{read:!1},"portal-item":{read:!1}}}},B={type:Number,json:{origins:{service:{write:{enabled:!1}},"web-scene":{name:"layerDefinition.minScale",write:{enabled:!0,layerContainerTypes:t}}},name:"layerDefinition.minScale",write:!0}},L={type:Number,json:{origins:{service:{write:{enabled:!1}},"web-scene":{name:"layerDefinition.maxScale",write:{enabled:!0,layerContainerTypes:t}}},name:"layerDefinition.maxScale",write:!0}},P={json:{write:{ignoreOrigin:!0,layerContainerTypes:t},origins:{"web-map":{read:!1,write:!1}}}};export{P as C,E as I,L as S,B as T,t as a,x as b,D as c,C as d,S as f,c as g,z as j,O as m,I as p,R as v,N as w,h as y};
