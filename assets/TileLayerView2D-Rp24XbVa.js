import{i as w,h as y,y as I,r as V,e as v,c as H,f as o,g as c,j as T,k as n,l as g,m as q}from"./index-rwr9l75y.js";import"./Container-m-X2DGFy.js";import"./BufferPool-sURXGJBW.js";import"./color-MSA9vB2T.js";import"./WGLContainer-RWXnfBYU.js";import"./enums-8pc8f5Ge.js";import"./Texture-IITjQftW.js";import"./ProgramTemplate-drETQBUn.js";import"./definitions--BerIEB0.js";import"./GeometryUtils-pN0lJOJH.js";import"./FramebufferObject-xhcDpZRj.js";import"./StyleDefinition-ohiNeWtS.js";import"./enums-W_WZ2jKy.js";import"./MagnifierPrograms-9wjjUMDp.js";import"./OrderIndependentTransparency-JGZ_PxZN.js";import"./floatRGBA-Y0kA9R7X.js";import"./testSVGPremultipliedAlpha-nzYqUz7h.js";import{r as U}from"./GraphicsView2D-L3UlZANi.js";import"./AttributeStoreView-2GRDdbO8.js";import"./earcut-6aBD8Ssv.js";import"./featureConversionUtils-FNM6dcN0.js";import"./lengthUtils-fNXXQLZy.js";import"./vec3f32-6rWBPTzX.js";import{r as S,o as f,n as d}from"./imageUtils-lKU3_EXx.js";import{m as b,u as C}from"./LayerView-SN8Ya_ml.js";import{a as Q}from"./HighlightGraphicContainer-8x6pefx_.js";import{a as $}from"./RefreshableLayerView-olEw24_L.js";import{S as k,G as P,r as F}from"./drapedUtils-CLrcNF7g.js";import"./parser-WHTFD6Ot.js";import"./enums--FbEXJ87.js";import"./VertexElementDescriptor-0hGjloLE.js";import"./heatmapUtils-y_chVdwW.js";import"./config-z2KFXUcx.js";import"./OptimizedGeometry-1RFAES06.js";import"./ExpandedCIM-r039T5K9.js";import"./BidiEngine-8z8MVveq.js";import"./visualVariablesUtils-ftjXEZ2Y.js";import"./GeometryUtils-CEMOhUyj.js";import"./utils-8dHEt1x_.js";import"./Rect-pT1ASav_.js";import"./quantizationUtils-Us5VtfAD.js";import"./rasterizingUtils-cwMkH0M_.js";import"./pbf-pkZimYly.js";import"./imageutils-z-WX2QXM.js";import"./Matcher-5VzK9-Dg.js";import"./tileUtils-pcBJnprf.js";import"./TurboLine-w-LQISZ9.js";import"./defaultsJSON-HVtDPFXZ.js";import"./LRUCache-9CocD9iD.js";import"./CircularArray-1_thnT0U.js";import"./throttle-SZpAiZ7F.js";import"./ComputedAttributeStorage-puCMOryp.js";import"./FieldsIndex-PWGCOsyk.js";import"./UnknownTimeZone-jfi9eEf7.js";import"./TimeOnly-ZwWj2Vlb.js";import"./diffUtils-g7Fohb1Y.js";import"./basicInterfaces-IwaMq8O_.js";import"./normalizeUtilsSync-UY7exMMQ.js";import"./projectionSupport-hu9_r6iQ.js";import"./json-v6EOeNTY.js";import"./LabelClass-V8j5wui3.js";import"./labelUtils-JUCMTUQJ.js";import"./jsonUtils-1tkaaT9f.js";import"./TiledDisplayObject-NTAr5tsC.js";import"./labelingInfo-l9wgedMn.js";import"./clusterUtils-CpC7FOKC.js";import"./MD5-uECS9GB-.js";import"./SizeVariable-Ekg0XaNX.js";import"./colorRamps-awdEZ3u_.js";import"./LegendOptions-E7OIex9R.js";import"./util-PmijqwOP.js";import"./OptimizedFeatureSet-smVI1ez9.js";import"./BitmapTileContainer-ZMcVXm7i.js";import"./Bitmap--2UIO8fv.js";import"./TileContainer-941YHDRa.js";import"./BaseGraphicContainer-nkQkRClz.js";import"./FeatureContainer-sCP9pctf.js";import"./floorFilterUtils-zOdaZIyV.js";import"./sublayerUtils-3kcFtWDF.js";import"./popupUtils-M2Ta7QiJ.js";const G=[0,0];let a=class extends $(S(b(C))){constructor(){super(...arguments),this._fetchQueue=null,this._highlightGraphics=new w,this._highlightView=null,this._popupHighlightHelper=null,this._tileStrategy=null,this.layer=null}get resampling(){return!("resampling"in this.layer)||this.layer.resampling!==!1}get tilemapCache(){return"tilemapCache"in this.layer?this.layer.tilemapCache:null}update(t){var i;this._fetchQueue.pause(),this._fetchQueue.state=t.state,this._tileStrategy.update(t),this._fetchQueue.resume(),(i=this._highlightView)==null||i.processUpdate(t)}attach(){const t="tileServers"in this.layer?this.layer.tileServers:null,i=this.tilemapCache;if(this._tileInfoView=new y(this.layer.tileInfo,this.layer.fullExtent,i==null?void 0:i.effectiveMinLOD,i==null?void 0:i.effectiveMaxLOD),this._fetchQueue=new I({tileInfoView:this._tileInfoView,concurrency:t&&10*t.length||10,process:(e,r)=>this.fetchTile(e,r)}),this._tileStrategy=new V({cachePolicy:"keep",resampling:this.resampling,acquireTile:e=>this.acquireTile(e),releaseTile:e=>this.releaseTile(e),tileInfoView:this._tileInfoView}),k(this,this.layer)){const e=this._highlightView=new U({view:this.view,graphics:this._highlightGraphics,requestUpdateCallback:()=>this.requestUpdate(),container:new Q(this.view.featuresTilingScheme),defaultPointSymbolEnabled:!1});this.container.addChild(this._highlightView.container),this._popupHighlightHelper=new P({createFetchPopupFeaturesQueryGeometry:(r,h)=>F(r,h,this.view),highlightGraphics:this._highlightGraphics,highlightGraphicUpdated:(r,h)=>{e.graphicUpdateHandler({graphic:r,property:h})},layerView:this,updatingHandles:this._updatingHandles})}this.requestUpdate(),this.addAttachHandles(this._updatingHandles.add(()=>this.resampling,()=>{this.doRefresh()})),super.attach()}detach(){var t,i;super.detach(),this._tileStrategy.destroy(),this._fetchQueue.clear(),this.container.removeAllChildren(),(t=this._popupHighlightHelper)==null||t.destroy(),(i=this._highlightView)==null||i.destroy(),this._fetchQueue=this._tileStrategy=this._tileInfoView=this._popupHighlightHelper=null}async fetchPopupFeatures(t,i){return this._popupHighlightHelper?this._popupHighlightHelper.fetchPopupFeatures(t,i):[]}highlight(t){return this._popupHighlightHelper?this._popupHighlightHelper.highlight(t):v()}moveStart(){this.requestUpdate()}viewChange(){this.requestUpdate()}moveEnd(){this.requestUpdate()}supportsSpatialReference(t){var i;return H((i=this.layer.tileInfo)==null?void 0:i.spatialReference,t)}async doRefresh(){if(this.attached){if(this.suspended)return this._tileStrategy.clear(),void this.requestUpdate();this._fetchQueue.reset(),this._tileStrategy.refresh(t=>this._updatingHandles.addPromise(this._enqueueTileFetch(t)))}}acquireTile(t){const i=this._bitmapView.createTile(t),e=i.bitmap;return[e.x,e.y]=this._tileInfoView.getTileCoords(G,i.key),e.resolution=this._tileInfoView.getTileResolution(i.key),[e.width,e.height]=this._tileInfoView.tileInfo.size,this._updatingHandles.addPromise(this._enqueueTileFetch(i)),this._bitmapView.addChild(i),this.requestUpdate(),i}releaseTile(t){this._fetchQueue.abort(t.key.id),this._bitmapView.removeChild(t),t.once("detach",()=>t.destroy()),this.requestUpdate()}async fetchTile(t,i={}){const e=this.tilemapCache,{signal:r,resamplingLevel:h=0}=i;if(!e)try{return await this._fetchImage(t,r)}catch(s){if(!o(s)&&!this.resampling)return f(this._tileInfoView.tileInfo.size);if(h<3){const m=this._tileInfoView.getTileParentId(t.id);if(m){const u=new c(m),_=await this.fetchTile(u,{...i,resamplingLevel:h+1});return d(this._tileInfoView,_,u,t)}}throw s}const p=new c(0,0,0,0);let l;try{if(await e.fetchAvailabilityUpsample(t.level,t.row,t.col,p,{signal:r}),p.level!==t.level&&!this.resampling)return f(this._tileInfoView.tileInfo.size);l=await this._fetchImage(p,r)}catch(s){if(o(s))throw s;l=await this._fetchImage(t,r)}return this.resampling?d(this._tileInfoView,l,p,t):l}async _enqueueTileFetch(t){if(!this._fetchQueue.has(t.key.id)){try{const i=await this._fetchQueue.push(t.key);t.bitmap.source=i,t.bitmap.width=this._tileInfoView.tileInfo.size[0],t.bitmap.height=this._tileInfoView.tileInfo.size[1],t.once("attach",()=>this.requestUpdate())}catch(i){o(i)||T.getLogger(this).error(i)}this.requestUpdate()}}async _fetchImage(t,i){return this.layer.fetchImageBitmapTile(t.level,t.row,t.col,{signal:i})}};n([g()],a.prototype,"resampling",null),n([g()],a.prototype,"tilemapCache",null),a=n([q("esri.views.2d.layers.TileLayerView2D")],a);const li=a;export{li as default};
